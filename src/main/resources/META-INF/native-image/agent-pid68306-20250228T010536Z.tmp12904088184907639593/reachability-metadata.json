{
  "reflection": [
    {
      "type": "[I"
    },
    {
      "type": "[J"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
      "type": "[Lcom.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry;"
    },
    {
      "type": "[Ljava.lang.Class;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[Ljava.lang.annotation.Annotation;"
    },
    {
      "type": "[Ljava.sql.Statement;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
    },
    {
      "type": "[Lorg.springframework.core.io.Resource;"
    },
    {
      "type": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
    },
    {
      "type": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
    },
    {
      "type": "[Z"
    },
    {
      "type": "ai.djl.huggingface.tokenizers.HuggingFaceTokenizer"
    },
    {
      "type": "ai.onnxruntime.OrtSession"
    },
    {
      "type": "ai.teamcollab.server.TeamCollabApplication",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "ai.teamcollab.server.TeamCollabApplication$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "ai.teamcollab.server.config.SecurityConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "passwordEncoder",
          "parameterTypes": []
        },
        {
          "name": "securityFilterChain",
          "parameterTypes": [
            "org.springframework.security.config.annotation.web.builders.HttpSecurity"
          ]
        }
      ]
    },
    {
      "type": "ai.teamcollab.server.config.SecurityConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "ai.teamcollab.server.config.SecurityConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "ai.teamcollab.server.config.SecurityConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "ai.teamcollab.server.controller.AuthController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "ai.teamcollab.server.service.UserService",
            "ai.teamcollab.server.service.CompanyService"
          ]
        }
      ]
    },
    {
      "type": "ai.teamcollab.server.controller.ConversationController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "ai.teamcollab.server.service.ConversationService"
          ]
        }
      ]
    },
    {
      "type": "ai.teamcollab.server.controller.DashboardController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ai.teamcollab.server.domain.Company",
      "allDeclaredFields": true
    },
    {
      "type": "ai.teamcollab.server.domain.Conversation",
      "allDeclaredFields": true
    },
    {
      "type": "ai.teamcollab.server.domain.Role",
      "allDeclaredFields": true
    },
    {
      "type": "ai.teamcollab.server.domain.User",
      "allDeclaredFields": true
    },
    {
      "type": "ai.teamcollab.server.domain.UserRole",
      "allDeclaredFields": true
    },
    {
      "type": "ai.teamcollab.server.repository.CompanyRepository"
    },
    {
      "type": "ai.teamcollab.server.repository.ConversationRepository"
    },
    {
      "type": "ai.teamcollab.server.repository.RoleRepository"
    },
    {
      "type": "ai.teamcollab.server.repository.UserRepository"
    },
    {
      "type": "ai.teamcollab.server.service.CompanyService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "ai.teamcollab.server.repository.CompanyRepository"
          ]
        }
      ]
    },
    {
      "type": "ai.teamcollab.server.service.CompanyService$$SpringCGLIB$$0"
    },
    {
      "type": "ai.teamcollab.server.service.ConversationService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "ai.teamcollab.server.repository.ConversationRepository",
            "ai.teamcollab.server.repository.UserRepository"
          ]
        }
      ]
    },
    {
      "type": "ai.teamcollab.server.service.ConversationService$$SpringCGLIB$$0"
    },
    {
      "type": "ai.teamcollab.server.service.UserService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "ai.teamcollab.server.repository.UserRepository",
            "ai.teamcollab.server.repository.RoleRepository",
            "ai.teamcollab.server.repository.CompanyRepository",
            "org.springframework.security.crypto.password.PasswordEncoder"
          ]
        }
      ]
    },
    {
      "type": "ai.teamcollab.server.service.UserService$$SpringCGLIB$$0"
    },
    {
      "type": "apple.security.AppleProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "boolean"
    },
    {
      "type": "ch.qos.logback.classic.BasicConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.LoggerContext"
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "co.elastic.clients.elasticsearch.ElasticsearchClient"
    },
    {
      "type": "co.elastic.clients.transport.ElasticsearchTransport"
    },
    {
      "type": "com.azure.ai.openai.OpenAIClientBuilder"
    },
    {
      "type": "com.azure.cosmos.CosmosAsyncClient"
    },
    {
      "type": "com.azure.search.documents.indexes.SearchIndexClient"
    },
    {
      "type": "com.couchbase.client.java.Bucket"
    },
    {
      "type": "com.couchbase.client.java.Cluster"
    },
    {
      "type": "com.datastax.oss.driver.api.core.CqlSession"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JacksonAnnotation"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonProperty"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator"
    },
    {
      "type": "com.fasterxml.jackson.core.ObjectCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.TreeCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.Versioned"
    },
    {
      "type": "com.fasterxml.jackson.databind.Module",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleModule",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
    },
    {
      "type": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Caffeine"
    },
    {
      "type": "com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect"
    },
    {
      "type": "com.google.cloud.vertexai.VertexAI"
    },
    {
      "type": "com.google.common.base.Optional"
    },
    {
      "type": "com.google.gson.Gson"
    },
    {
      "type": "com.google.protobuf.Message"
    },
    {
      "type": "com.hazelcast.client.config.ClientConfig"
    },
    {
      "type": "com.hazelcast.core.HazelcastInstance"
    },
    {
      "type": "com.jayway.jsonpath.DocumentContext"
    },
    {
      "type": "com.mchange.v2.c3p0.ComboPooledDataSource"
    },
    {
      "type": "com.mongodb.ConnectionString"
    },
    {
      "type": "com.mongodb.client.MongoClient"
    },
    {
      "type": "com.mongodb.reactivestreams.client.MongoClient"
    },
    {
      "type": "com.oracle.bmc.generativeaiinference.GenerativeAiInferenceClient"
    },
    {
      "type": "com.querydsl.core.Query"
    },
    {
      "type": "com.querydsl.core.types.Predicate"
    },
    {
      "type": "com.rabbitmq.client.Channel"
    },
    {
      "type": "com.rometools.rome.feed.WireFeed"
    },
    {
      "type": "com.samskivert.mustache.Mustache"
    },
    {
      "type": "com.samskivert.mustache.Template"
    },
    {
      "type": "com.sendgrid.SendGrid"
    },
    {
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.unboundid.ldap.listener.InMemoryDirectoryServer"
    },
    {
      "type": "com.zaxxer.hikari.HikariConfig",
      "allDeclaredFields": true
    },
    {
      "type": "com.zaxxer.hikari.HikariConfigMXBean"
    },
    {
      "type": "com.zaxxer.hikari.HikariDataSource",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.pool.PoolBase",
      "fields": [
        {
          "name": "catalog"
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.pool.PoolEntry",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "freemarker.template.Configuration"
    },
    {
      "type": "graphql.GraphQL"
    },
    {
      "type": "groovy.io.FileType"
    },
    {
      "type": "groovy.lang.Buildable"
    },
    {
      "type": "groovy.lang.Closure"
    },
    {
      "type": "groovy.lang.EmptyRange"
    },
    {
      "type": "groovy.lang.ExpandoMetaClass",
      "allDeclaredFields": true
    },
    {
      "type": "groovy.lang.ExpandoMetaClassBeanInfo"
    },
    {
      "type": "groovy.lang.ExpandoMetaClassCustomizer"
    },
    {
      "type": "groovy.lang.GString"
    },
    {
      "type": "groovy.lang.GroovyObject",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getProperty",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "invokeMethod",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "groovy.lang.GroovyObjectSupport"
    },
    {
      "type": "groovy.lang.IntRange"
    },
    {
      "type": "groovy.lang.ListWithDefault"
    },
    {
      "type": "groovy.lang.MetaClass",
      "allDeclaredFields": true
    },
    {
      "type": "groovy.lang.MetaClassImpl",
      "allDeclaredFields": true
    },
    {
      "type": "groovy.lang.MetaClassImplBeanInfo"
    },
    {
      "type": "groovy.lang.MetaClassImplCustomizer"
    },
    {
      "type": "groovy.lang.MetaMethod",
      "methods": [
        {
          "name": "doMethodInvoke",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.Object[]"
          ]
        }
      ]
    },
    {
      "type": "groovy.lang.MetaObjectProtocol",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getProperty",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.String"
          ]
        },
        {
          "name": "invokeConstructor",
          "parameterTypes": [
            "java.lang.Object[]"
          ]
        },
        {
          "name": "invokeMethod",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.String",
            "java.lang.Object[]"
          ]
        },
        {
          "name": "invokeStaticMethod",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.String",
            "java.lang.Object[]"
          ]
        }
      ]
    },
    {
      "type": "groovy.lang.MetaProperty",
      "methods": [
        {
          "name": "getProperty",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "groovy.lang.MutableMetaClass",
      "allDeclaredFields": true
    },
    {
      "type": "groovy.lang.ObjectRange"
    },
    {
      "type": "groovy.lang.Range"
    },
    {
      "type": "groovy.lang.SpreadMap"
    },
    {
      "type": "groovy.lang.Writable"
    },
    {
      "type": "groovy.lang.groovydoc.Groovydoc"
    },
    {
      "type": "groovy.runtime.metaclass.CustomMetaClassCreationHandle"
    },
    {
      "type": "groovy.runtime.metaclass.groovy.lang.ExpandoMetaClassMetaClass"
    },
    {
      "type": "groovy.runtime.metaclass.nz.net.ultraq.thymeleaf.layoutdialect.LayoutDialectMetaClass"
    },
    {
      "type": "groovy.runtime.metaclass.nz.net.ultraq.thymeleaf.layoutdialect.decorators.strategies.AppendingStrategyMetaClass"
    },
    {
      "type": "groovy.runtime.metaclass.org.springframework.beans.factory.groovy.GroovyBeanDefinitionReaderMetaClass"
    },
    {
      "type": "groovy.text.TemplateEngine"
    },
    {
      "type": "groovy.text.markup.MarkupTemplateEngine"
    },
    {
      "type": "groovy.transform.Generated"
    },
    {
      "type": "groovy.transform.Internal"
    },
    {
      "type": "groovy.util.BufferedIterator"
    },
    {
      "type": "io.micrometer.context.ContextSnapshot"
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry"
    },
    {
      "type": "io.micrometer.observation.ObservationRegistry"
    },
    {
      "type": "io.micrometer.observation.contextpropagation.ObservationThreadLocalAccessor"
    },
    {
      "type": "io.micrometer.tracing.Tracer"
    },
    {
      "type": "io.micrometer.tracing.otel.bridge.OtelTracer"
    },
    {
      "type": "io.netty.buffer.ByteBuf"
    },
    {
      "type": "io.netty.buffer.PooledByteBufAllocator"
    },
    {
      "type": "io.netty.util.NettyRuntime"
    },
    {
      "type": "io.netty5.buffer.Buffer"
    },
    {
      "type": "io.r2dbc.proxy.ProxyConnectionFactory"
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactory"
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactoryOptions"
    },
    {
      "type": "io.reactivex.rxjava3.core.Flowable"
    },
    {
      "type": "io.rsocket.RSocket"
    },
    {
      "type": "io.rsocket.core.RSocketServer"
    },
    {
      "type": "io.smallrye.mutiny.Multi"
    },
    {
      "type": "io.undertow.Undertow"
    },
    {
      "type": "io.undertow.websockets.jsr.Bootstrap"
    },
    {
      "type": "io.vavr.control.Option"
    },
    {
      "type": "io.vavr.control.Try"
    },
    {
      "type": "jakarta.activation.MimeType"
    },
    {
      "type": "jakarta.annotation.ManagedBean"
    },
    {
      "type": "jakarta.annotation.PostConstruct"
    },
    {
      "type": "jakarta.annotation.PreDestroy"
    },
    {
      "type": "jakarta.annotation.Resource"
    },
    {
      "type": "jakarta.ejb.EJB"
    },
    {
      "type": "jakarta.ejb.TransactionAttribute"
    },
    {
      "type": "jakarta.faces.context.FacesContext"
    },
    {
      "type": "jakarta.inject.Inject"
    },
    {
      "type": "jakarta.inject.Named"
    },
    {
      "type": "jakarta.inject.Provider"
    },
    {
      "type": "jakarta.inject.Qualifier"
    },
    {
      "type": "jakarta.jms.ConnectionFactory"
    },
    {
      "type": "jakarta.jms.Message"
    },
    {
      "type": "jakarta.json.bind.Jsonb"
    },
    {
      "type": "jakarta.persistence.EntityManager"
    },
    {
      "type": "jakarta.persistence.EntityManagerFactory"
    },
    {
      "type": "jakarta.persistence.Persistence"
    },
    {
      "type": "jakarta.persistence.PersistenceContext"
    },
    {
      "type": "jakarta.servlet.Filter"
    },
    {
      "type": "jakarta.servlet.GenericFilter"
    },
    {
      "type": "jakarta.servlet.GenericServlet",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.MultipartConfigElement",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.Servlet"
    },
    {
      "type": "jakarta.servlet.ServletConfig"
    },
    {
      "type": "jakarta.servlet.ServletContext"
    },
    {
      "type": "jakarta.servlet.ServletRegistration"
    },
    {
      "type": "jakarta.servlet.ServletRequest"
    },
    {
      "type": "jakarta.servlet.http.HttpServlet",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.jsp.jstl.core.Config"
    },
    {
      "type": "jakarta.transaction.Transaction"
    },
    {
      "type": "jakarta.transaction.TransactionManager"
    },
    {
      "type": "jakarta.transaction.Transactional"
    },
    {
      "type": "jakarta.validation.Constraint"
    },
    {
      "type": "jakarta.validation.Valid"
    },
    {
      "type": "jakarta.validation.Validator"
    },
    {
      "type": "jakarta.validation.ValidatorFactory"
    },
    {
      "type": "jakarta.validation.bootstrap.GenericBootstrap"
    },
    {
      "type": "jakarta.validation.constraints.NotBlank"
    },
    {
      "type": "jakarta.validation.constraints.Size"
    },
    {
      "type": "jakarta.validation.executable.ExecutableValidator"
    },
    {
      "type": "jakarta.websocket.server.ServerContainer"
    },
    {
      "type": "jakarta.xml.bind.Binder"
    },
    {
      "type": "jakarta.xml.ws.WebServiceRef"
    },
    {
      "type": "java.beans.PropertyVetoException"
    },
    {
      "type": "java.beans.Transient"
    },
    {
      "type": "java.io.BufferedInputStream"
    },
    {
      "type": "java.io.BufferedOutputStream"
    },
    {
      "type": "java.io.BufferedReader"
    },
    {
      "type": "java.io.BufferedWriter"
    },
    {
      "type": "java.io.Closeable"
    },
    {
      "type": "java.io.Console",
      "methods": [
        {
          "name": "isTerminal",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.io.DataInputStream"
    },
    {
      "type": "java.io.DataOutputStream"
    },
    {
      "type": "java.io.File"
    },
    {
      "type": "java.io.FilePermission"
    },
    {
      "type": "java.io.FileSystem",
      "fields": [
        {
          "name": "useCanonCaches"
        }
      ]
    },
    {
      "type": "java.io.Flushable"
    },
    {
      "type": "java.io.InputStream"
    },
    {
      "type": "java.io.ObjectInputStream"
    },
    {
      "type": "java.io.ObjectOutputStream"
    },
    {
      "type": "java.io.OutputStream"
    },
    {
      "type": "java.io.PrintStream"
    },
    {
      "type": "java.io.PrintWriter"
    },
    {
      "type": "java.io.Reader"
    },
    {
      "type": "java.io.Serializable"
    },
    {
      "type": "java.io.Writer"
    },
    {
      "type": "java.lang.Appendable"
    },
    {
      "type": "java.lang.AutoCloseable"
    },
    {
      "type": "java.lang.Boolean"
    },
    {
      "type": "java.lang.CharSequence"
    },
    {
      "type": "java.lang.Character"
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "forName",
          "parameterTypes": [
            "java.lang.String",
            "boolean",
            "java.lang.ClassLoader"
          ]
        },
        {
          "name": "getModule",
          "parameterTypes": []
        },
        {
          "name": "getPermittedSubclasses",
          "parameterTypes": []
        },
        {
          "name": "getRecordComponents",
          "parameterTypes": []
        },
        {
          "name": "isSealed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "fields": [
        {
          "name": "classLoaderValueMap"
        }
      ]
    },
    {
      "type": "java.lang.CloneNotSupportedException"
    },
    {
      "type": "java.lang.Cloneable"
    },
    {
      "type": "java.lang.Comparable"
    },
    {
      "type": "java.lang.Double"
    },
    {
      "type": "java.lang.Enum"
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.Float"
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.IllegalStateException"
    },
    {
      "type": "java.lang.Integer"
    },
    {
      "type": "java.lang.Iterable"
    },
    {
      "type": "java.lang.Long"
    },
    {
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "isNamed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Number"
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "equals",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "java.lang.ObjectBeanInfo"
    },
    {
      "type": "java.lang.ObjectCustomizer"
    },
    {
      "type": "java.lang.Process"
    },
    {
      "type": "java.lang.Readable"
    },
    {
      "type": "java.lang.Record",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.RuntimePermission"
    },
    {
      "type": "java.lang.SecurityManager",
      "methods": [
        {
          "name": "checkPermission",
          "parameterTypes": [
            "java.security.Permission"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Short"
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.lang.StringBuffer"
    },
    {
      "type": "java.lang.StringBuilder"
    },
    {
      "type": "java.lang.System",
      "methods": [
        {
          "name": "getSecurityManager",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.System$Logger"
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ]
    },
    {
      "type": "java.lang.Thread$Builder"
    },
    {
      "type": "java.lang.ThreadLocal"
    },
    {
      "type": "java.lang.Throwable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.WrongThreadException"
    },
    {
      "type": "java.lang.annotation.Documented"
    },
    {
      "type": "java.lang.annotation.Inherited"
    },
    {
      "type": "java.lang.annotation.Repeatable"
    },
    {
      "type": "java.lang.annotation.Retention"
    },
    {
      "type": "java.lang.annotation.Target"
    },
    {
      "type": "java.lang.constant.Constable"
    },
    {
      "type": "java.lang.invoke.LambdaMetafactory"
    },
    {
      "type": "java.lang.invoke.TypeDescriptor$OfField"
    },
    {
      "type": "java.lang.reflect.AnnotatedElement"
    },
    {
      "type": "java.lang.reflect.GenericArrayType",
      "methods": [
        {
          "name": "getGenericComponentType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.GenericDeclaration"
    },
    {
      "type": "java.lang.reflect.InvocationTargetException"
    },
    {
      "type": "java.lang.reflect.ParameterizedType",
      "methods": [
        {
          "name": "getActualTypeArguments",
          "parameterTypes": []
        },
        {
          "name": "getOwnerType",
          "parameterTypes": []
        },
        {
          "name": "getRawType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.RecordComponent",
      "methods": [
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Type"
    },
    {
      "type": "java.lang.reflect.TypeVariable",
      "methods": [
        {
          "name": "getBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.WildcardType",
      "methods": [
        {
          "name": "getLowerBounds",
          "parameterTypes": []
        },
        {
          "name": "getUpperBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.math.BigDecimal"
    },
    {
      "type": "java.math.BigInteger"
    },
    {
      "type": "java.net.NetPermission"
    },
    {
      "type": "java.net.ServerSocket"
    },
    {
      "type": "java.net.Socket"
    },
    {
      "type": "java.net.SocketPermission"
    },
    {
      "type": "java.net.URI"
    },
    {
      "type": "java.net.URL"
    },
    {
      "type": "java.net.URLClassLoader"
    },
    {
      "type": "java.net.URLPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.net.UnixDomainSocketAddress"
    },
    {
      "type": "java.net.http.HttpClient"
    },
    {
      "type": "java.nio.Buffer"
    },
    {
      "type": "java.nio.ByteBuffer"
    },
    {
      "type": "java.nio.ShortBuffer"
    },
    {
      "type": "java.nio.channels.ServerSocketChannel"
    },
    {
      "type": "java.nio.channels.SocketChannel"
    },
    {
      "type": "java.nio.charset.Charset"
    },
    {
      "type": "java.security.AccessController",
      "methods": [
        {
          "name": "doPrivileged",
          "parameterTypes": [
            "java.security.PrivilegedExceptionAction"
          ]
        }
      ]
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.AllPermission"
    },
    {
      "type": "java.security.KeyStoreSpi"
    },
    {
      "type": "java.security.SecureClassLoader"
    },
    {
      "type": "java.security.SecurityPermission"
    },
    {
      "type": "java.sql.Array"
    },
    {
      "type": "java.sql.Connection",
      "methods": [
        {
          "name": "getMetaData",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.sql.Date"
    },
    {
      "type": "java.sql.Driver"
    },
    {
      "type": "java.sql.DriverManager"
    },
    {
      "type": "java.sql.ResultSet"
    },
    {
      "type": "java.sql.Time"
    },
    {
      "type": "java.sql.Timestamp"
    },
    {
      "type": "java.sql.Wrapper"
    },
    {
      "type": "java.text.ListFormat"
    },
    {
      "type": "java.time.DurationEditor"
    },
    {
      "type": "java.time.LocalDateTime"
    },
    {
      "type": "java.util.AbstractCollection"
    },
    {
      "type": "java.util.AbstractMap"
    },
    {
      "type": "java.util.ArrayList",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.Collection"
          ]
        }
      ]
    },
    {
      "type": "java.util.BitSet"
    },
    {
      "type": "java.util.Collection"
    },
    {
      "type": "java.util.Comparator"
    },
    {
      "type": "java.util.Deque"
    },
    {
      "type": "java.util.Enumeration"
    },
    {
      "type": "java.util.EventListener"
    },
    {
      "type": "java.util.HashSet",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.Collection"
          ]
        }
      ]
    },
    {
      "type": "java.util.Iterator"
    },
    {
      "type": "java.util.List"
    },
    {
      "type": "java.util.Locale"
    },
    {
      "type": "java.util.Map"
    },
    {
      "type": "java.util.Map$Entry"
    },
    {
      "type": "java.util.NavigableSet"
    },
    {
      "type": "java.util.Objects",
      "methods": [
        {
          "name": "nonNull",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "java.util.Optional"
    },
    {
      "type": "java.util.OptionalDouble"
    },
    {
      "type": "java.util.OptionalInt"
    },
    {
      "type": "java.util.OptionalLong"
    },
    {
      "type": "java.util.PropertyPermission"
    },
    {
      "type": "java.util.Random"
    },
    {
      "type": "java.util.ResourceBundle"
    },
    {
      "type": "java.util.Set"
    },
    {
      "type": "java.util.SortedMap"
    },
    {
      "type": "java.util.SortedSet"
    },
    {
      "type": "java.util.Spliterator"
    },
    {
      "type": "java.util.Timer"
    },
    {
      "type": "java.util.TimerTask"
    },
    {
      "type": "java.util.UUID"
    },
    {
      "type": "java.util.concurrent.BlockingQueue"
    },
    {
      "type": "java.util.concurrent.Executor"
    },
    {
      "type": "java.util.concurrent.ExecutorService"
    },
    {
      "type": "java.util.concurrent.ForkJoinTask",
      "fields": [
        {
          "name": "aux"
        },
        {
          "name": "status"
        }
      ]
    },
    {
      "type": "java.util.concurrent.Future"
    },
    {
      "type": "java.util.concurrent.ThreadFactory"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "java.util.function.DoubleFunction"
    },
    {
      "type": "java.util.function.DoublePredicate"
    },
    {
      "type": "java.util.function.Function"
    },
    {
      "type": "java.util.function.IntFunction"
    },
    {
      "type": "java.util.function.IntPredicate"
    },
    {
      "type": "java.util.function.LongFunction"
    },
    {
      "type": "java.util.function.LongPredicate"
    },
    {
      "type": "java.util.function.Supplier"
    },
    {
      "type": "java.util.function.ToDoubleFunction"
    },
    {
      "type": "java.util.function.ToIntFunction"
    },
    {
      "type": "java.util.function.ToLongFunction"
    },
    {
      "type": "java.util.logging.LogManager"
    },
    {
      "type": "java.util.logging.SimpleFormatter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.regex.Matcher"
    },
    {
      "type": "java.util.regex.Pattern"
    },
    {
      "type": "java.util.stream.BaseStream"
    },
    {
      "type": "java.util.stream.DoubleStream"
    },
    {
      "type": "java.util.stream.IntStream"
    },
    {
      "type": "java.util.stream.LongStream"
    },
    {
      "type": "java.util.stream.Stream"
    },
    {
      "type": "javafx.beans.value.ObservableValue"
    },
    {
      "type": "javax.annotation.ManagedBean"
    },
    {
      "type": "javax.annotation.Nonnull"
    },
    {
      "type": "javax.annotation.PostConstruct"
    },
    {
      "type": "javax.annotation.PreDestroy"
    },
    {
      "type": "javax.annotation.Resource"
    },
    {
      "type": "javax.cache.Caching"
    },
    {
      "type": "javax.inject.Inject"
    },
    {
      "type": "javax.inject.Named"
    },
    {
      "type": "javax.inject.Qualifier"
    },
    {
      "type": "javax.money.MonetaryAmount"
    },
    {
      "type": "javax.naming.InitialContext"
    },
    {
      "type": "javax.naming.ldap.LdapContext"
    },
    {
      "type": "javax.security.auth.Subject"
    },
    {
      "type": "javax.smartcardio.CardPermission"
    },
    {
      "type": "javax.sql.CommonDataSource"
    },
    {
      "type": "javax.sql.DataSource"
    },
    {
      "type": "javax.sql.XADataSource"
    },
    {
      "type": "jdk.crac.management.CRaCMXBean"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$AppClassLoader"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$PlatformClassLoader"
    },
    {
      "type": "jdk.internal.misc.Unsafe"
    },
    {
      "type": "kotlin.Metadata"
    },
    {
      "type": "kotlin.coroutines.Continuation"
    },
    {
      "type": "kotlinx.coroutines.flow.Flow"
    },
    {
      "type": "kotlinx.coroutines.reactor.MonoKt"
    },
    {
      "type": "kotlinx.serialization.cbor.Cbor"
    },
    {
      "type": "kotlinx.serialization.json.Json"
    },
    {
      "type": "kotlinx.serialization.protobuf.ProtoBuf"
    },
    {
      "type": "liquibase.change.DatabaseChange"
    },
    {
      "type": "nz.net.ultraq.groovy.extensions.BlockingQueueExtensions"
    },
    {
      "type": "nz.net.ultraq.groovy.extensions.ByteArrayExtensions"
    },
    {
      "type": "nz.net.ultraq.groovy.extensions.ByteBufferExtensions"
    },
    {
      "type": "nz.net.ultraq.groovy.extensions.ByteBufferStaticExtensions"
    },
    {
      "type": "nz.net.ultraq.groovy.extensions.ExecutorServiceExtensions"
    },
    {
      "type": "nz.net.ultraq.groovy.extensions.FutureExtensions"
    },
    {
      "type": "nz.net.ultraq.groovy.extensions.MapExtensions"
    },
    {
      "type": "nz.net.ultraq.groovy.extensions.MathStaticExtensions"
    },
    {
      "type": "nz.net.ultraq.groovy.extensions.ObjectExtensions"
    },
    {
      "type": "nz.net.ultraq.groovy.extensions.ObjectStaticExtensions"
    },
    {
      "type": "nz.net.ultraq.groovy.extensions.SemaphoreExtensions"
    },
    {
      "type": "nz.net.ultraq.groovy.extensions.ShortBufferExtensions"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.LayoutDialect",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getDIALECT_NAME",
          "parameterTypes": []
        },
        {
          "name": "getDIALECT_PRECEDENCE",
          "parameterTypes": []
        },
        {
          "name": "getDIALECT_PREFIX",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.LayoutDialectBeanInfo"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.LayoutDialectCustomizer"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.context.extensions.IContextExtensions"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.decorators.SortingStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.decorators.strategies.AppendingStrategy",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.decorators.strategies.AppendingStrategyBeanInfo"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.decorators.strategies.AppendingStrategyCustomizer"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.fragments.extensions.FragmentExtensions"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.IAttributeExtensions"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.ICloseElementTagExtensions"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.IModelExtensions"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.IProcessableElementTagExtensions"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.IStandaloneElementTagExtensions"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.ITemplateEventExtensions"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.models.extensions.ITextExtensions"
    },
    {
      "type": "oracle.jdbc.OracleConnection"
    },
    {
      "type": "oracle.ucp.jdbc.PoolDataSource"
    },
    {
      "type": "oracle.ucp.jdbc.PoolDataSourceImpl"
    },
    {
      "type": "org.aopalliance.intercept.MethodInterceptor"
    },
    {
      "type": "org.apache.catalina.core.ApplicationContextFacade"
    },
    {
      "type": "org.apache.catalina.loader.JdbcLeakPrevention",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "clearJdbcDriverRegistrations",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.catalina.startup.Tomcat"
    },
    {
      "type": "org.apache.catalina.util.CharsetMapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.commons.dbcp2.BasicDataSource"
    },
    {
      "type": "org.apache.coyote.AbstractProtocol",
      "methods": [
        {
          "name": "getAddress",
          "parameterTypes": []
        },
        {
          "name": "getLocalPort",
          "parameterTypes": []
        },
        {
          "name": "getProperty",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setProperty",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.apache.coyote.UpgradeProtocol"
    },
    {
      "type": "org.apache.coyote.http11.AbstractHttp11Protocol",
      "methods": [
        {
          "name": "isSSLEnabled",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.coyote.http11.Http11NioProtocol"
    },
    {
      "type": "org.apache.derby.jdbc.EmbeddedDriver"
    },
    {
      "type": "org.apache.el.ExpressionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.hc.client5.http.classic.HttpClient"
    },
    {
      "type": "org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient"
    },
    {
      "type": "org.apache.hc.client5.http.impl.async.HttpAsyncClients"
    },
    {
      "type": "org.apache.hc.client5.http.impl.classic.HttpClients"
    },
    {
      "type": "org.apache.hc.core5.http.nio.AsyncRequestProducer"
    },
    {
      "type": "org.apache.hc.core5.reactive.ReactiveResponseConsumer"
    },
    {
      "type": "org.apache.jasper.compiler.JspConfig"
    },
    {
      "type": "org.apache.jasper.servlet.JspServlet"
    },
    {
      "type": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
    },
    {
      "type": "org.apache.logging.log4j.spi.ExtendedLogger"
    },
    {
      "type": "org.apache.logging.slf4j.SLF4JProvider"
    },
    {
      "type": "org.apache.pulsar.client.api.PulsarClient"
    },
    {
      "type": "org.apache.tomcat.jdbc.pool.DataSource"
    },
    {
      "type": "org.apache.tomcat.jdbc.pool.DataSourceProxy"
    },
    {
      "type": "org.apache.tomcat.util.net.AbstractEndpoint",
      "methods": [
        {
          "name": "setBindOnInit",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.apache.tomcat.util.net.NioEndpoint"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsFilter"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsSci"
    },
    {
      "type": "org.aspectj.weaver.Advice"
    },
    {
      "type": "org.cache2k.Cache2kBuilder"
    },
    {
      "type": "org.codehaus.groovy.reflection.stdclasses.CachedSAMClass",
      "methods": [
        {
          "name": "coerceToSAM",
          "parameterTypes": [
            "groovy.lang.Closure",
            "java.lang.reflect.Method",
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport"
    },
    {
      "type": "org.codehaus.groovy.runtime.DefaultGroovyStaticMethods"
    },
    {
      "type": "org.codehaus.groovy.runtime.GStringImpl"
    },
    {
      "type": "org.codehaus.groovy.runtime.GroovyCategorySupport",
      "methods": [
        {
          "name": "hasCategoryInCurrentThread",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.InvokerHelper",
      "methods": [
        {
          "name": "getMetaClass",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.NullObject"
    },
    {
      "type": "org.codehaus.groovy.runtime.callsite.CallSite"
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.NumberNumberDiv",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMinus",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.NumberNumberMultiply",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.NumberNumberPlus",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.BooleanArrayGetAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.BooleanArrayPutAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.ByteArrayGetAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.ByteArrayPutAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.CharacterArrayGetAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.CharacterArrayPutAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.DoubleArrayGetAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.DoubleArrayPutAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.FloatArrayGetAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.FloatArrayPutAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.IntegerArrayGetAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.IntegerArrayPutAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.LongArrayGetAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.LongArrayPutAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.ObjectArrayGetAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.ObjectArrayPutAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.ShortArrayGetAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.dgmimpl.arrays.ShortArrayPutAtMetaMethod",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation",
      "methods": [
        {
          "name": "castToType",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.runtime.typehandling.GroovyCastException",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.vmplugin.v10.PluginDefaultGroovyMethods"
    },
    {
      "type": "org.codehaus.groovy.vmplugin.v16.Java16",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.vmplugin.v8.IndyGuardsFiltersAndSignatures",
      "methods": [
        {
          "name": "invokeGroovyObjectInvoker",
          "parameterTypes": [
            "groovy.lang.MissingMethodException",
            "java.lang.Object",
            "java.lang.String",
            "java.lang.Object[]"
          ]
        },
        {
          "name": "isNull",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "isSameMetaClass",
          "parameterTypes": [
            "groovy.lang.MetaClass",
            "java.lang.Object"
          ]
        },
        {
          "name": "sameClass",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.Object"
          ]
        },
        {
          "name": "sameClasses",
          "parameterTypes": [
            "java.lang.Class[]",
            "java.lang.Object[]"
          ]
        },
        {
          "name": "setBeanProperties",
          "parameterTypes": [
            "groovy.lang.MetaClass",
            "java.lang.Object",
            "java.util.Map"
          ]
        },
        {
          "name": "unwrap",
          "parameterTypes": [
            "groovy.lang.GroovyRuntimeException"
          ]
        },
        {
          "name": "unwrap",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.vmplugin.v8.IndyInterface",
      "methods": [
        {
          "name": "fromCache",
          "parameterTypes": [
            "java.lang.invoke.MutableCallSite",
            "java.lang.Class",
            "java.lang.String",
            "int",
            "java.lang.Boolean",
            "java.lang.Boolean",
            "java.lang.Boolean",
            "java.lang.Object",
            "java.lang.Object[]"
          ]
        },
        {
          "name": "selectMethod",
          "parameterTypes": [
            "java.lang.invoke.MutableCallSite",
            "java.lang.Class",
            "java.lang.String",
            "int",
            "java.lang.Boolean",
            "java.lang.Boolean",
            "java.lang.Boolean",
            "java.lang.Object",
            "java.lang.Object[]"
          ]
        }
      ]
    },
    {
      "type": "org.codehaus.groovy.vmplugin.v8.PluginDefaultGroovyMethods"
    },
    {
      "type": "org.codehaus.groovy.vmplugin.v9.PluginDefaultGroovyMethods"
    },
    {
      "type": "org.crac.Core"
    },
    {
      "type": "org.crac.Resource"
    },
    {
      "type": "org.eclipse.collections.api.list.ImmutableList"
    },
    {
      "type": "org.eclipse.core.runtime.FileLocator"
    },
    {
      "type": "org.eclipse.jetty.client.HttpClient"
    },
    {
      "type": "org.eclipse.jetty.ee10.webapp.WebAppContext"
    },
    {
      "type": "org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer"
    },
    {
      "type": "org.eclipse.jetty.server.Server"
    },
    {
      "type": "org.eclipse.jetty.util.Loader"
    },
    {
      "type": "org.elasticsearch.client.RestClient"
    },
    {
      "type": "org.elasticsearch.client.RestClientBuilder"
    },
    {
      "type": "org.flywaydb.core.Flyway",
      "allDeclaredFields": true
    },
    {
      "type": "org.flywaydb.core.api.migration.baseline.BaselineAppliedMigration"
    },
    {
      "type": "org.flywaydb.core.api.migration.baseline.BaselineMigrationConfigurationExtension",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getBaselineMigrationPrefix",
          "parameterTypes": []
        },
        {
          "name": "setBaselineMigrationPrefix",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.flywaydb.core.api.migration.baseline.BaselineMigrationResolver"
    },
    {
      "type": "org.flywaydb.core.api.migration.baseline.BaselineMigrationTypeResolver"
    },
    {
      "type": "org.flywaydb.core.api.migration.baseline.BaselineResourceTypeProvider"
    },
    {
      "type": "org.flywaydb.core.experimental.migration.CoreMigrationTypeResolver"
    },
    {
      "type": "org.flywaydb.core.extensibility.ConfigurationExtension"
    },
    {
      "type": "org.flywaydb.core.extensibility.Plugin"
    },
    {
      "type": "org.flywaydb.core.internal.command.clean.CleanModeConfigurationExtension",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getClean",
          "parameterTypes": []
        },
        {
          "name": "setClean",
          "parameterTypes": [
            "org.flywaydb.core.internal.command.clean.CleanModel"
          ]
        }
      ]
    },
    {
      "type": "org.flywaydb.core.internal.command.clean.CleanModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.flywaydb.core.internal.command.clean.SchemaModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.flywaydb.core.internal.configuration.extensions.DeployScriptFilenameConfigurationExtension",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getScriptFilename",
          "parameterTypes": []
        },
        {
          "name": "setScriptFilename",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.flywaydb.core.internal.configuration.extensions.PrepareScriptFilenameConfigurationExtension",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getScriptFilename",
          "parameterTypes": []
        },
        {
          "name": "setScriptFilename",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.flywaydb.core.internal.configuration.resolvers.EnvironmentProvisionerNone"
    },
    {
      "type": "org.flywaydb.core.internal.configuration.resolvers.EnvironmentVariableResolver"
    },
    {
      "type": "org.flywaydb.core.internal.database.base.TestContainersDatabaseType"
    },
    {
      "type": "org.flywaydb.core.internal.database.h2.H2DatabaseType"
    },
    {
      "type": "org.flywaydb.core.internal.database.sqlite.SQLiteDatabaseType"
    },
    {
      "type": "org.flywaydb.core.internal.logging.slf4j.Slf4jLogCreator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.flywaydb.core.internal.proprietaryStubs.AuthCommandExtensionStub"
    },
    {
      "type": "org.flywaydb.core.internal.proprietaryStubs.CommandExtensionStub"
    },
    {
      "type": "org.flywaydb.core.internal.proprietaryStubs.LicensingConfigurationExtensionStub",
      "allDeclaredFields": true
    },
    {
      "type": "org.flywaydb.core.internal.proprietaryStubs.PATTokenConfigurationExtensionStub",
      "allDeclaredFields": true
    },
    {
      "type": "org.flywaydb.core.internal.publishing.PublishingConfigurationExtension",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "isCheckDriftOnMigrate",
          "parameterTypes": []
        },
        {
          "name": "isPublishResult",
          "parameterTypes": []
        },
        {
          "name": "setCheckDriftOnMigrate",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setPublishResult",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.flywaydb.core.internal.resource.CoreResourceTypeProvider"
    },
    {
      "type": "org.flywaydb.core.internal.schemahistory.BaseAppliedMigration"
    },
    {
      "type": "org.flywaydb.database.cockroachdb.CockroachDBDatabaseType"
    },
    {
      "type": "org.flywaydb.database.oracle.OracleConfigurationExtension"
    },
    {
      "type": "org.flywaydb.database.postgresql.PostgreSQLConfigurationExtension",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getTransactional",
          "parameterTypes": []
        },
        {
          "name": "isTransactionalLock",
          "parameterTypes": []
        },
        {
          "name": "setTransactional",
          "parameterTypes": [
            "org.flywaydb.database.postgresql.TransactionalModel"
          ]
        },
        {
          "name": "setTransactionalLock",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.flywaydb.database.postgresql.PostgreSQLDatabaseType"
    },
    {
      "type": "org.flywaydb.database.postgresql.TransactionalModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.flywaydb.database.sqlserver.SQLServerConfigurationExtension"
    },
    {
      "type": "org.glassfish.jersey.server.spring.SpringComponentProvider"
    },
    {
      "type": "org.graalvm.nativeimage.ImageInfo",
      "methods": [
        {
          "name": "inImageCode",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.Driver"
    },
    {
      "type": "org.h2.server.web.JakartaWebServlet"
    },
    {
      "type": "org.hibernate.validator.HibernateValidator"
    },
    {
      "type": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
      "methods": [
        {
          "name": "externalClassLoader",
          "parameterTypes": [
            "java.lang.ClassLoader"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.engine.ConfigurationImpl"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jboss.logging.Logger"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_en"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_en_US"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en_US"
    },
    {
      "type": "org.hotswap.agent.HotswapAgent"
    },
    {
      "type": "org.hsqldb.jdbc.JDBCDriver"
    },
    {
      "type": "org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
    },
    {
      "type": "org.jboss.logging.Logger"
    },
    {
      "type": "org.jmolecules.ddd.annotation.Identity"
    },
    {
      "type": "org.jmolecules.ddd.types.Association"
    },
    {
      "type": "org.jmolecules.spring.IdentifierToPrimitivesConverter"
    },
    {
      "type": "org.joda.time.ReadableInstant"
    },
    {
      "type": "org.jooq.DSLContext"
    },
    {
      "type": "org.junit.Test"
    },
    {
      "type": "org.junit.jupiter.api.Test"
    },
    {
      "type": "org.neo4j.driver.Driver"
    },
    {
      "type": "org.opensearch.client.opensearch.OpenSearchClient"
    },
    {
      "type": "org.postgresql.Driver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.postgresql.core.QueryExecutorCloseAction",
      "fields": [
        {
          "name": "pgStream"
        }
      ]
    },
    {
      "type": "org.postgresql.geometric.PGBox"
    },
    {
      "type": "org.postgresql.geometric.PGbox"
    },
    {
      "type": "org.postgresql.geometric.PGcircle"
    },
    {
      "type": "org.postgresql.geometric.PGline"
    },
    {
      "type": "org.postgresql.geometric.PGlseg"
    },
    {
      "type": "org.postgresql.geometric.PGpath"
    },
    {
      "type": "org.postgresql.geometric.PGpoint"
    },
    {
      "type": "org.postgresql.geometric.PGpolygon"
    },
    {
      "type": "org.postgresql.jdbc.PgStatement",
      "fields": [
        {
          "name": "cancelTimerTask"
        },
        {
          "name": "isClosed"
        },
        {
          "name": "statementState"
        }
      ]
    },
    {
      "type": "org.postgresql.jdbc.TypeInfoCache"
    },
    {
      "type": "org.postgresql.util.PGobject"
    },
    {
      "type": "org.quartz.Scheduler"
    },
    {
      "type": "org.reactivestreams.Publisher"
    },
    {
      "type": "org.slf4j.Logger"
    },
    {
      "type": "org.slf4j.bridge.SLF4JBridgeHandler"
    },
    {
      "type": "org.slf4j.spi.LocationAwareLogger"
    },
    {
      "type": "org.springframework.ai.anthropic.api.AnthropicApi"
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.client.ChatClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "chatClientBuilderConfigurer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.client.ChatClientBuilderConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.client.ChatClientBuilderProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.model.ToolCallingAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "toolCallbackResolver",
          "parameterTypes": [
            "org.springframework.context.support.GenericApplicationContext",
            "java.util.List",
            "java.util.List"
          ]
        },
        {
          "name": "toolCallingManager",
          "parameterTypes": [
            "org.springframework.ai.tool.resolution.ToolCallbackResolver",
            "org.springframework.ai.tool.execution.ToolExecutionExceptionProcessor",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "toolExecutionExceptionProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.observation.ChatObservationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.observation.ChatObservationAutoConfiguration$FallbackChatContentObservationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.observation.ChatObservationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.embedding.observation.EmbeddingObservationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.image.observation.ImageObservationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.image.observation.ImageObservationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "ollamaApi",
          "parameterTypes": [
            "org.springframework.ai.autoconfigure.ollama.OllamaConnectionDetails",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "ollamaChatModel",
          "parameterTypes": [
            "org.springframework.ai.ollama.api.OllamaApi",
            "org.springframework.ai.autoconfigure.ollama.OllamaChatProperties",
            "org.springframework.ai.autoconfigure.ollama.OllamaInitializationProperties",
            "org.springframework.ai.model.tool.ToolCallingManager",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "ollamaEmbeddingModel",
          "parameterTypes": [
            "org.springframework.ai.ollama.api.OllamaApi",
            "org.springframework.ai.autoconfigure.ollama.OllamaEmbeddingProperties",
            "org.springframework.ai.autoconfigure.ollama.OllamaInitializationProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "springAiFunctionManager",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaChatProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaConnectionDetails"
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaConnectionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaEmbeddingProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaInitializationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.openai.OpenAiAudioSpeechProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.openai.OpenAiAudioTranscriptionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.openai.OpenAiAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "openAiAudioSpeechClient",
          "parameterTypes": [
            "org.springframework.ai.autoconfigure.openai.OpenAiConnectionProperties",
            "org.springframework.ai.autoconfigure.openai.OpenAiAudioSpeechProperties",
            "org.springframework.retry.support.RetryTemplate",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.web.client.ResponseErrorHandler"
          ]
        },
        {
          "name": "openAiAudioTranscriptionModel",
          "parameterTypes": [
            "org.springframework.ai.autoconfigure.openai.OpenAiConnectionProperties",
            "org.springframework.ai.autoconfigure.openai.OpenAiAudioTranscriptionProperties",
            "org.springframework.retry.support.RetryTemplate",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.web.client.ResponseErrorHandler"
          ]
        },
        {
          "name": "openAiChatModel",
          "parameterTypes": [
            "org.springframework.ai.autoconfigure.openai.OpenAiConnectionProperties",
            "org.springframework.ai.autoconfigure.openai.OpenAiChatProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.ai.model.tool.ToolCallingManager",
            "org.springframework.retry.support.RetryTemplate",
            "org.springframework.web.client.ResponseErrorHandler",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "openAiEmbeddingModel",
          "parameterTypes": [
            "org.springframework.ai.autoconfigure.openai.OpenAiConnectionProperties",
            "org.springframework.ai.autoconfigure.openai.OpenAiEmbeddingProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.retry.support.RetryTemplate",
            "org.springframework.web.client.ResponseErrorHandler",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "openAiImageModel",
          "parameterTypes": [
            "org.springframework.ai.autoconfigure.openai.OpenAiConnectionProperties",
            "org.springframework.ai.autoconfigure.openai.OpenAiImageProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.retry.support.RetryTemplate",
            "org.springframework.web.client.ResponseErrorHandler",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "openAiModerationClient",
          "parameterTypes": [
            "org.springframework.ai.autoconfigure.openai.OpenAiConnectionProperties",
            "org.springframework.ai.autoconfigure.openai.OpenAiModerationProperties",
            "org.springframework.retry.support.RetryTemplate",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.web.client.ResponseErrorHandler"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.openai.OpenAiChatProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getOptions",
          "parameterTypes": []
        },
        {
          "name": "setOptions",
          "parameterTypes": [
            "org.springframework.ai.openai.OpenAiChatOptions"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.openai.OpenAiConnectionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.openai.OpenAiEmbeddingProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.openai.OpenAiImageProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.openai.OpenAiModerationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.openai.OpenAiParentProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setApiKey",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.retry.SpringAiRetryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "responseErrorHandler",
          "parameterTypes": [
            "org.springframework.ai.autoconfigure.retry.SpringAiRetryProperties"
          ]
        },
        {
          "name": "retryTemplate",
          "parameterTypes": [
            "org.springframework.ai.autoconfigure.retry.SpringAiRetryProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.retry.SpringAiRetryAutoConfiguration$2",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.retry.SpringAiRetryProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.vectorstore.observation.VectorStoreObservationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.vectorstore.observation.VectorStoreObservationAutoConfiguration$FallbackVectorStoreQueryResponseContentObservationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.vectorstore.observation.VectorStoreObservationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.azure.openai.AzureOpenAiChatModel"
    },
    {
      "type": "org.springframework.ai.bedrock.cohere.api.CohereEmbeddingBedrockApi"
    },
    {
      "type": "org.springframework.ai.bedrock.converse.BedrockProxyChatModel"
    },
    {
      "type": "org.springframework.ai.bedrock.titan.api.TitanEmbeddingBedrockApi"
    },
    {
      "type": "org.springframework.ai.chat.client.ChatClient"
    },
    {
      "type": "org.springframework.ai.chat.client.ChatClient$Builder"
    },
    {
      "type": "org.springframework.ai.chat.memory.cassandra.CassandraChatMemory"
    },
    {
      "type": "org.springframework.ai.chat.model.AbstractToolCallSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.model.ChatModel"
    },
    {
      "type": "org.springframework.ai.chat.model.StreamingChatModel"
    },
    {
      "type": "org.springframework.ai.chroma.vectorstore.ChromaVectorStore"
    },
    {
      "type": "org.springframework.ai.docker.compose.service.connection.chroma.ChromaDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.docker.compose.service.connection.mongo.MongoDbAtlasLocalDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.docker.compose.service.connection.ollama.OllamaDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.docker.compose.service.connection.ollama.OllamaDockerComposeConnectionDetailsFactory$OllamaDockerComposeConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.docker.compose.service.connection.opensearch.AwsOpenSearchDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.docker.compose.service.connection.opensearch.OpenSearchDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.docker.compose.service.connection.qdrant.QdrantDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.docker.compose.service.connection.typesense.TypesenseDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.docker.compose.service.connection.weaviate.WeaviateDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.embedding.AbstractEmbeddingModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.embedding.EmbeddingModel"
    },
    {
      "type": "org.springframework.ai.huggingface.HuggingfaceChatModel"
    },
    {
      "type": "org.springframework.ai.image.ImageModel"
    },
    {
      "type": "org.springframework.ai.minimax.api.MiniMaxApi"
    },
    {
      "type": "org.springframework.ai.mistralai.api.MistralAiApi"
    },
    {
      "type": "org.springframework.ai.model.Model"
    },
    {
      "type": "org.springframework.ai.model.StreamingModel"
    },
    {
      "type": "org.springframework.ai.model.function.DefaultFunctionCallbackResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.function.FunctionCallbackResolver"
    },
    {
      "type": "org.springframework.ai.model.tool.DefaultToolCallingManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.tool.ToolCallingChatOptions"
    },
    {
      "type": "org.springframework.ai.model.tool.ToolCallingManager"
    },
    {
      "type": "org.springframework.ai.moderation.ModerationModel"
    },
    {
      "type": "org.springframework.ai.moonshot.api.MoonshotApi"
    },
    {
      "type": "org.springframework.ai.oci.OCIEmbeddingModel"
    },
    {
      "type": "org.springframework.ai.ollama.OllamaChatModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.ollama.OllamaEmbeddingModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.openai.OpenAiAudioSpeechModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.openai.OpenAiAudioTranscriptionModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.openai.OpenAiChatModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.openai.OpenAiChatOptions",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setModel",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTemperature",
          "parameterTypes": [
            "java.lang.Double"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.openai.OpenAiEmbeddingModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.openai.OpenAiImageModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.openai.OpenAiModerationModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.openai.api.OpenAiApi"
    },
    {
      "type": "org.springframework.ai.openai.audio.speech.SpeechModel"
    },
    {
      "type": "org.springframework.ai.openai.audio.speech.StreamingSpeechModel"
    },
    {
      "type": "org.springframework.ai.postgresml.PostgresMlEmbeddingModel"
    },
    {
      "type": "org.springframework.ai.qianfan.api.QianFanApi"
    },
    {
      "type": "org.springframework.ai.retry.RetryUtils"
    },
    {
      "type": "org.springframework.ai.stabilityai.api.StabilityAiApi"
    },
    {
      "type": "org.springframework.ai.tool.execution.DefaultToolExecutionExceptionProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.tool.execution.ToolExecutionExceptionProcessor"
    },
    {
      "type": "org.springframework.ai.tool.resolution.DelegatingToolCallbackResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.tool.resolution.ToolCallbackResolver"
    },
    {
      "type": "org.springframework.ai.transformers.TransformersEmbeddingModel"
    },
    {
      "type": "org.springframework.ai.vectorstore.VectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.azure.AzureVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.cassandra.CassandraVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.cosmosdb.CosmosDBVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.elasticsearch.ElasticsearchVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.gemfire.GemFireVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.hanadb.HanaCloudVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.hanadb.HanaVectorEntity"
    },
    {
      "type": "org.springframework.ai.vectorstore.mariadb.MariaDBVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.milvus.MilvusVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.mongodb.atlas.MongoDBAtlasVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.neo4j.Neo4jVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.opensearch.OpenSearchVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.oracle.OracleVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.pgvector.PgVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.pinecone.PineconeVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.qdrant.QdrantVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.redis.RedisVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.typesense.TypesenseVectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.weaviate.WeaviateVectorStore"
    },
    {
      "type": "org.springframework.ai.vertexai.embedding.text.VertexAiTextEmbeddingModel"
    },
    {
      "type": "org.springframework.ai.vertexai.gemini.VertexAiGeminiChatModel"
    },
    {
      "type": "org.springframework.ai.watsonx.api.WatsonxAiApi"
    },
    {
      "type": "org.springframework.ai.zhipuai.api.ZhiPuAiApi"
    },
    {
      "type": "org.springframework.aop.PointcutAdvisor"
    },
    {
      "type": "org.springframework.aop.SpringProxy"
    },
    {
      "type": "org.springframework.aop.TargetClassAware",
      "methods": [
        {
          "name": "getTargetClass",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.Advised",
      "methods": [
        {
          "name": "isFrozen",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.AopInfrastructureBean"
    },
    {
      "type": "org.springframework.aop.framework.ProxyConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setProxyTargetClass",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.ProxyProcessorSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setOrder",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aop.scope.ScopedObject"
    },
    {
      "type": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.support.AbstractPointcutAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aot.generate.Generated"
    },
    {
      "type": "org.springframework.aot.hint.annotation.Reflective"
    },
    {
      "type": "org.springframework.batch.core.launch.JobLauncher"
    },
    {
      "type": "org.springframework.beans.CachedIntrospectionResults",
      "fields": [
        {
          "name": "acceptedClassLoaders"
        },
        {
          "name": "softClassCache"
        },
        {
          "name": "strongClassCache"
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.Aware"
    },
    {
      "type": "org.springframework.beans.factory.BeanClassLoaderAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactoryAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanNameAware"
    },
    {
      "type": "org.springframework.beans.factory.DisposableBean"
    },
    {
      "type": "org.springframework.beans.factory.FactoryBean"
    },
    {
      "type": "org.springframework.beans.factory.InitializingBean"
    },
    {
      "type": "org.springframework.beans.factory.SmartInitializingSingleton"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Autowired"
    },
    {
      "type": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.annotation.Qualifier"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReaderBeanInfo"
    },
    {
      "type": "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReaderCustomizer"
    },
    {
      "type": "org.springframework.beans.factory.support.AbstractBeanDefinitionReader",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.support.AbstractBeanDefinitionReaderBeanInfo"
    },
    {
      "type": "org.springframework.beans.factory.support.AbstractBeanDefinitionReaderCustomizer"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionReader",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanNameGenerator"
    },
    {
      "type": "org.springframework.beans.factory.support.NullBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ApplicationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ClearCachesApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.SpringApplication"
    },
    {
      "type": "org.springframework.boot.SpringBootConfiguration"
    },
    {
      "type": "org.springframework.boot.ansi.AnsiOutput$Enabled"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureAfter"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureBefore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureOrder"
    },
    {
      "type": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.EnableAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ImportAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SpringBootApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "forceAutoProxyCreatorToUseClassProxying",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationAvailability",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.codec.CodecProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnCheckpointRestore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultLifecycleProcessor",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.context.LifecycleProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "propertySourcesPlaceholderConfigurer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "persistenceExceptionTranslationPostProcessor",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.jdbc.JdbcDataProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.autoconfigure.data.jdbc.JdbcDataProperties"
          ]
        },
        {
          "name": "dataAccessStrategyBean",
          "parameterTypes": [
            "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
            "org.springframework.data.jdbc.core.convert.JdbcConverter",
            "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
            "org.springframework.data.relational.core.dialect.Dialect"
          ]
        },
        {
          "name": "jdbcAggregateTemplate",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
            "org.springframework.data.jdbc.core.convert.JdbcConverter",
            "org.springframework.data.jdbc.core.convert.DataAccessStrategy"
          ]
        },
        {
          "name": "jdbcConverter",
          "parameterTypes": [
            "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
            "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
            "org.springframework.data.jdbc.core.convert.RelationResolver",
            "org.springframework.data.jdbc.core.convert.JdbcCustomConversions",
            "org.springframework.data.relational.core.dialect.Dialect"
          ]
        },
        {
          "name": "jdbcCustomConversions",
          "parameterTypes": []
        },
        {
          "name": "jdbcDialect",
          "parameterTypes": [
            "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations"
          ]
        },
        {
          "name": "jdbcManagedTypes",
          "parameterTypes": []
        },
        {
          "name": "jdbcMappingContext",
          "parameterTypes": [
            "java.util.Optional",
            "org.springframework.data.jdbc.core.convert.JdbcCustomConversions",
            "org.springframework.data.relational.RelationalManagedTypes"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
          ]
        },
        {
          "name": "pageableCustomizer",
          "parameterTypes": []
        },
        {
          "name": "sortCustomizer",
          "parameterTypes": []
        },
        {
          "name": "springDataWebSettings",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "flywayDefaultDdlModeProvider",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "stringOrNumberMigrationVersionConverter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayAutoConfigurationRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
          ]
        },
        {
          "name": "flyway",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.flyway.FlywayConnectionDetails",
            "org.springframework.core.io.ResourceLoader",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizer"
          ]
        },
        {
          "name": "flywayInitializer",
          "parameterTypes": [
            "org.flywaydb.core.Flyway",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "postgresqlFlywayConfigurationCustomizer",
          "parameterTypes": []
        },
        {
          "name": "resourceProviderCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayDataSourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$PostgresqlFlywayConfigurationCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayConfigurationCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayDataSource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getLocations",
          "parameterTypes": []
        },
        {
          "name": "setBaselineOnMigrate",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setLocations",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "messageConverters",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "stringHttpMessageConverter",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "mappingJackson2HttpMessageConverter",
          "parameterTypes": [
            "com.fasterxml.jackson.databind.ObjectMapper"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "clientHttpRequestFactoryBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.http.client.HttpClientProperties"
          ]
        },
        {
          "name": "clientHttpRequestFactorySettings",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.http.client.HttpClientProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.HttpClientProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultCodecCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.codec.CodecProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonCodecCustomizer",
          "parameterTypes": [
            "com.fasterxml.jackson.databind.ObjectMapper"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonComponentModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "standardJacksonObjectMapperBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonMixinModule",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.jackson.JsonMixinModuleEntries"
          ]
        },
        {
          "name": "jsonMixinModuleEntries",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapperBuilder",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapper",
          "parameterTypes": [
            "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "parameterNamesModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceCheckpointRestoreConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dataSource",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
            "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails"
          ]
        },
        {
          "name": "jdbcConnectionDetailsHikariBeanPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "javax.sql.DataSource",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setDriverClassName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPassword",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "transactionManager",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "javax.sql.DataSource",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.HikariJdbcConnectionDetailsBeanPostProcessor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jdbcClient",
          "parameterTypes": [
            "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jdbcTemplate",
          "parameterTypes": [
            "javax.sql.DataSource",
            "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "namedParameterJdbcTemplate",
          "parameterTypes": [
            "org.springframework.jdbc.core.JdbcTemplate"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "hikariPoolDataSourceMetadataProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.reactor.ReactorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.SecurityProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getUser",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.SecurityProperties$User",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getRoles",
          "parameterTypes": []
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPassword",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRoles",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.client.ClientsConfiguredCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration$NonServletApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2WebSecurityConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$RSocketEnabledOrReactiveWebApplication",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "authenticationEventPublisher",
          "parameterTypes": [
            "org.springframework.context.ApplicationEventPublisher"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "securityFilterChainRegistration",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.security.SecurityProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dataSourceScriptDatabaseInitializer",
          "parameterTypes": [
            "javax.sql.DataSource",
            "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader",
            "org.springframework.boot.autoconfigure.ssl.SslProperties"
          ]
        },
        {
          "name": "fileWatcher",
          "parameterTypes": []
        },
        {
          "name": "sslBundleRegistry",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "sslPropertiesSslBundleRegistrar",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.ssl.FileWatcher"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskExecutorBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationTaskExecutor",
          "parameterTypes": [
            "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskExecutorBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskSchedulerBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskSchedulerBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thread.Threading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "templateEngine",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$ReactiveTemplateEngineConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "defaultTemplateResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafSecurityDialectConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "securityDialect",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebLayoutConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "layoutDialect",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "thymeleafViewResolver",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
            "org.thymeleaf.spring6.SpringTemplateEngine"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setCache",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "transactionTemplate",
          "parameterTypes": [
            "org.springframework.transaction.PlatformTransactionManager"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "platformTransactionManagerCustomizers",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "transactionExecutionListeners",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultValidator",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "methodValidationPostProcessor",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setIncludeBindingErrors",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
          ]
        },
        {
          "name": "setIncludeMessage",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
          ]
        },
        {
          "name": "setIncludeStacktrace",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttributeEditor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getError",
          "parameterTypes": []
        },
        {
          "name": "getServlet",
          "parameterTypes": []
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getJsp",
          "parameterTypes": []
        },
        {
          "name": "getSession",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getResources",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCache",
          "parameterTypes": []
        },
        {
          "name": "getChain",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setPeriod",
          "parameterTypes": [
            "java.time.Duration"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setCache",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "httpMessageConvertersRestClientCustomizer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "restClientBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer"
          ]
        },
        {
          "name": "restClientBuilderConfigurer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "restClientSsl",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.ssl.SslBundles"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientSsl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "tomcatWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.AutoConfiguredWebClientSsl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webClientHttpConnector",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory"
          ]
        },
        {
          "name": "webClientHttpConnectorCustomizer",
          "parameterTypes": [
            "org.springframework.http.client.reactive.ClientHttpConnector"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$HttpClient5"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$JdkClient",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jdkClientHttpConnectorFactory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.JdkClientHttpConnectorFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webClientBuilder",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "webClientSsl",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
            "org.springframework.boot.ssl.SslBundles"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "exchangeStrategiesCustomizer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dispatcherServlet",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dispatcherServletRegistration",
          "parameterTypes": [
            "org.springframework.web.servlet.DispatcherServlet",
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "characterEncodingFilter",
          "parameterTypes": []
        },
        {
          "name": "localeCharsetMappingsCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
          ]
        },
        {
          "name": "multipartConfigElement",
          "parameterTypes": []
        },
        {
          "name": "multipartResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "servletWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "tomcatServletWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "tomcatServletWebServerFactory",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "formContentFilter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ListableBeanFactory"
          ]
        },
        {
          "name": "flashMapManager",
          "parameterTypes": []
        },
        {
          "name": "localeResolver",
          "parameterTypes": []
        },
        {
          "name": "mvcContentNegotiationManager",
          "parameterTypes": []
        },
        {
          "name": "mvcConversionService",
          "parameterTypes": []
        },
        {
          "name": "mvcValidator",
          "parameterTypes": []
        },
        {
          "name": "themeResolver",
          "parameterTypes": []
        },
        {
          "name": "viewNameTranslator",
          "parameterTypes": []
        },
        {
          "name": "welcomePageHandlerMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "welcomePageNotAcceptableHandlerMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.beans.factory.ListableBeanFactory",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "defaultViewResolver",
          "parameterTypes": []
        },
        {
          "name": "requestContextFilter",
          "parameterTypes": []
        },
        {
          "name": "viewResolver",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setLogResolvedException",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "basicErrorController",
          "parameterTypes": [
            "org.springframework.boot.web.servlet.error.ErrorAttributes",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "errorAttributes",
          "parameterTypes": []
        },
        {
          "name": "errorPageCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
          ]
        },
        {
          "name": "preserveErrorControllerTargetClassPostProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.autoconfigure.web.WebProperties"
          ]
        },
        {
          "name": "conventionErrorViewResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "beanNameViewResolver",
          "parameterTypes": []
        },
        {
          "name": "defaultErrorView",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver"
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "websocketServletWebServerCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailability"
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailabilityBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.FileEncodingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.TypeExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.ConfigurableBootstrapContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataNotFoundAction"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataProperties",
      "fields": [
        {
          "name": "this$0"
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.context.properties.bind.Binder",
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.event.EventPublishingRunListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.SpringApplication",
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.BoundConfigurationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBinding"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.NestedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Name"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Nested"
    },
    {
      "type": "org.springframework.boot.convert.DurationUnit"
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "inMemoryDatabaseShutdownExecutor",
          "parameterTypes": [
            "javax.sql.DataSource",
            "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor"
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DevToolsDataSourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.DevToolsProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "liveReloadServer",
          "parameterTypes": [
            "org.springframework.boot.devtools.autoconfigure.DevToolsProperties"
          ]
        },
        {
          "name": "liveReloadServerEventListener",
          "parameterTypes": [
            "org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer"
          ]
        },
        {
          "name": "optionalLiveReloadServer",
          "parameterTypes": [
            "org.springframework.boot.devtools.livereload.LiveReloadServer"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadServerEventListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.devtools.autoconfigure.DevToolsProperties"
          ]
        },
        {
          "name": "classPathFileSystemWatcher",
          "parameterTypes": [
            "org.springframework.boot.devtools.filewatch.FileSystemWatcherFactory",
            "org.springframework.boot.devtools.classpath.ClassPathRestartStrategy"
          ]
        },
        {
          "name": "classPathRestartStrategy",
          "parameterTypes": []
        },
        {
          "name": "conditionEvaluationDeltaLoggingListener",
          "parameterTypes": []
        },
        {
          "name": "fileSystemWatcherFactory",
          "parameterTypes": []
        },
        {
          "name": "restartingClassPathChangedEventListener",
          "parameterTypes": [
            "org.springframework.boot.devtools.filewatch.FileSystemWatcherFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.OnEnabledDevToolsCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.classpath.ClassPathRestartStrategy"
    },
    {
      "type": "org.springframework.boot.devtools.classpath.PatternClassPathRestartStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.env.DevToolsHomePropertiesPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.filewatch.FileSystemWatcherFactory"
    },
    {
      "type": "org.springframework.boot.devtools.livereload.LiveReloadServer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.logger.DevToolsLogFactory$Listener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.logger.DevToolsLogFactory.Listener"
    },
    {
      "type": "org.springframework.boot.devtools.restart.ConditionalOnInitializedRestarter"
    },
    {
      "type": "org.springframework.boot.devtools.restart.OnInitializedRestarterCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.restart.RestartApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.restart.RestartScope"
    },
    {
      "type": "org.springframework.boot.devtools.restart.RestartScopeInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.restart.classloader.RestartClassLoader"
    },
    {
      "type": "org.springframework.boot.docker.compose.core.DockerCliComposeConfigResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.core.DockerCliComposeConfigResponse$Service",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.core.DockerCliComposePsResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.core.DockerCliComposeVersionResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.core.DockerCliContextResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "boolean",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.core.DockerCliInspectResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$Config",
            "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$NetworkSettings",
            "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$HostConfig"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$Config",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.util.Map",
            "java.util.Map",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$ExposedPort",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$HostConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$HostPort",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$NetworkSettings",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.lifecycle.DockerComposeListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.lifecycle.DockerComposeProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getReadiness",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.lifecycle.DockerComposeProperties$Readiness",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setWait",
          "parameterTypes": [
            "org.springframework.boot.docker.compose.lifecycle.DockerComposeProperties$Readiness$Wait"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.lifecycle.DockerComposeProperties$Readiness$WaitEditor"
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.DockerComposeConnectionDetailsFactory$DockerComposeConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.DockerComposeServiceConnectionsApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.activemq.ActiveMQClassicDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.activemq.ActiveMQDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.activemq.ArtemisDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.cassandra.CassandraDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.clickhouse.ClickHouseJdbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.clickhouse.ClickHouseR2dbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.elasticsearch.ElasticsearchDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.flyway.JdbcAdaptingFlywayConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.flyway.JdbcAdaptingFlywayConnectionDetailsFactory$1",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.hazelcast.HazelcastDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.ldap.OpenLdapDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.liquibase.JdbcAdaptingLiquibaseConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.liquibase.JdbcAdaptingLiquibaseConnectionDetailsFactory$1",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.mariadb.MariaDbJdbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.mariadb.MariaDbR2dbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.mongo.MongoDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.mysql.MySqlJdbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.mysql.MySqlR2dbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.neo4j.Neo4jDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.oracle.OracleFreeJdbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.oracle.OracleFreeR2dbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.oracle.OracleXeJdbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.oracle.OracleXeR2dbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.otlp.OpenTelemetryLoggingDockerComposeConnectionDetailsFactory"
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.otlp.OpenTelemetryMetricsDockerComposeConnectionDetailsFactory"
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.otlp.OpenTelemetryTracingDockerComposeConnectionDetailsFactory"
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.postgres.PostgresJdbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.postgres.PostgresJdbcDockerComposeConnectionDetailsFactory$PostgresJdbcDockerComposeConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.postgres.PostgresR2dbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.pulsar.PulsarDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.rabbit.RabbitDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.redis.RedisDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.sqlserver.SqlServerJdbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.sqlserver.SqlServerR2dbcDockerComposeConnectionDetailsFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.docker.compose.service.connection.zipkin.ZipkinDockerComposeConnectionDetailsFactory"
    },
    {
      "type": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.PropertiesPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.YamlPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.http.client.AbstractClientHttpRequestFactoryBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.ClientHttpRequestFactorySettings",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.JdkClientHttpRequestFactoryBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.io.Base64ProtocolResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponentModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jdbc.SchemaManagementProvider"
    },
    {
      "type": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
    },
    {
      "type": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.LogLevelEditor"
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.logback.ColorConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.EnclosedInSquareBracketsConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.logback.RootLogLevelConfigurator"
    },
    {
      "type": "org.springframework.boot.origin.OriginProvider"
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ssl.SslBundleRegistry"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundles"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
      "methods": [
        {
          "name": "byAnnotation",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.client.RestClientCustomizer"
    },
    {
      "type": "org.springframework.boot.web.client.RestTemplateBuilder"
    },
    {
      "type": "org.springframework.boot.web.codec.CodecCustomizer"
    },
    {
      "type": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer"
    },
    {
      "type": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.ConfigurableWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistrar"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistry"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1"
    },
    {
      "type": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.FilterRegistrationBean"
    },
    {
      "type": "org.springframework.boot.web.servlet.RegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.ServletContextInitializer"
    },
    {
      "type": "org.springframework.boot.web.servlet.ServletRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.WebListenerRegistry"
    },
    {
      "type": "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.error.ErrorAttributes"
    },
    {
      "type": "org.springframework.boot.web.servlet.error.ErrorController"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedFilter"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Encoding",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Jsp",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getInitParameters",
          "parameterTypes": []
        },
        {
          "name": "setInitParameters",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setPersistent",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cache.Cache"
    },
    {
      "type": "org.springframework.cache.CacheManager"
    },
    {
      "type": "org.springframework.cache.interceptor.CacheAspectSupport"
    },
    {
      "type": "org.springframework.cglib.core.ClassNameReader",
      "fields": [
        {
          "name": "EARLY_EXIT"
        }
      ]
    },
    {
      "type": "org.springframework.cglib.core.ReflectUtils"
    },
    {
      "type": "org.springframework.cglib.proxy.Dispatcher"
    },
    {
      "type": "org.springframework.cglib.proxy.Factory"
    },
    {
      "type": "org.springframework.cglib.proxy.MethodProxy"
    },
    {
      "type": "org.springframework.cglib.reflect.FastClass"
    },
    {
      "type": "org.springframework.context.ApplicationContextAware"
    },
    {
      "type": "org.springframework.context.ApplicationEventPublisherAware"
    },
    {
      "type": "org.springframework.context.ApplicationListener"
    },
    {
      "type": "org.springframework.context.ApplicationStartupAware"
    },
    {
      "type": "org.springframework.context.EmbeddedValueResolverAware"
    },
    {
      "type": "org.springframework.context.EnvironmentAware"
    },
    {
      "type": "org.springframework.context.Lifecycle"
    },
    {
      "type": "org.springframework.context.LifecycleProcessor"
    },
    {
      "type": "org.springframework.context.MessageSourceAware"
    },
    {
      "type": "org.springframework.context.Phased"
    },
    {
      "type": "org.springframework.context.ResourceLoaderAware"
    },
    {
      "type": "org.springframework.context.SmartLifecycle"
    },
    {
      "type": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.AutoProxyRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Bean"
    },
    {
      "type": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan"
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan$Filter"
    },
    {
      "type": "org.springframework.context.annotation.Conditional"
    },
    {
      "type": "org.springframework.context.annotation.Configuration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMetadataReaderFactory",
          "parameterTypes": [
            "org.springframework.core.type.classreading.MetadataReaderFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.DependsOn"
    },
    {
      "type": "org.springframework.context.annotation.Import"
    },
    {
      "type": "org.springframework.context.annotation.ImportAware"
    },
    {
      "type": "org.springframework.context.annotation.ImportRuntimeHints"
    },
    {
      "type": "org.springframework.context.annotation.Lazy"
    },
    {
      "type": "org.springframework.context.annotation.Primary"
    },
    {
      "type": "org.springframework.context.annotation.Role"
    },
    {
      "type": "org.springframework.context.annotation.Scope"
    },
    {
      "type": "org.springframework.context.event.DefaultEventListenerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.EventListenerMethodProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.GenericApplicationListener"
    },
    {
      "type": "org.springframework.context.event.SmartApplicationListener"
    },
    {
      "type": "org.springframework.context.support.ApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.GenericApplicationContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
    },
    {
      "type": "org.springframework.core.DecoratingProxy"
    },
    {
      "type": "org.springframework.core.Ordered"
    },
    {
      "type": "org.springframework.core.PriorityOrdered"
    },
    {
      "type": "org.springframework.core.SmartClassLoader"
    },
    {
      "type": "org.springframework.core.annotation.AliasFor"
    },
    {
      "type": "org.springframework.core.annotation.Order"
    },
    {
      "type": "org.springframework.core.convert.ConversionService"
    },
    {
      "type": "org.springframework.core.convert.converter.ConverterRegistry"
    },
    {
      "type": "org.springframework.core.convert.converter.GenericConverter"
    },
    {
      "type": "org.springframework.core.convert.support.ConfigurableConversionService"
    },
    {
      "type": "org.springframework.core.convert.support.GenericConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.env.Environment"
    },
    {
      "type": "org.springframework.core.env.EnvironmentCapable",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.io.Resource"
    },
    {
      "type": "org.springframework.core.io.ResourceLoader"
    },
    {
      "type": "org.springframework.core.io.support.PropertiesLoaderSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setIgnoreResourceNotFound",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setLocations",
          "parameterTypes": [
            "org.springframework.core.io.Resource[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.core.task.AsyncListenableTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.AsyncTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.TaskExecutor"
    },
    {
      "type": "org.springframework.core.type.classreading.MetadataReaderFactory"
    },
    {
      "type": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.annotation.Id"
    },
    {
      "type": "org.springframework.data.annotation.Transient"
    },
    {
      "type": "org.springframework.data.cassandra.ReactiveSession"
    },
    {
      "type": "org.springframework.data.convert.CustomConversions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.convert.ReadingConverter"
    },
    {
      "type": "org.springframework.data.convert.WritingConverter"
    },
    {
      "type": "org.springframework.data.domain.ManagedTypes"
    },
    {
      "type": "org.springframework.data.domain.Unpaged"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
    },
    {
      "type": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
    },
    {
      "type": "org.springframework.data.geo.GeoModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.JdbcAggregateOperations"
    },
    {
      "type": "org.springframework.data.jdbc.core.JdbcAggregateTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.DataAccessStrategy"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.DefaultDataAccessStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.JdbcConverter"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.JdbcCustomConversions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.MappingJdbcConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.ReadingDataAccessStrategy"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.RelationResolver"
    },
    {
      "type": "org.springframework.data.jdbc.core.dialect.JdbcDialect"
    },
    {
      "type": "org.springframework.data.jdbc.core.dialect.JdbcPostgresDialect",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.DialectResolver$DefaultDialectProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.DialectResolver.DefaultDialectProvider"
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.EnableJdbcRepositories"
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.JdbcRepositoryConfigExtension"
    },
    {
      "type": "org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "setConverter",
          "parameterTypes": [
            "org.springframework.data.jdbc.core.convert.JdbcConverter"
          ]
        },
        {
          "name": "setDialect",
          "parameterTypes": [
            "org.springframework.data.relational.core.dialect.Dialect"
          ]
        },
        {
          "name": "setMappingContext",
          "parameterTypes": [
            "org.springframework.data.relational.core.mapping.RelationalMappingContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.jdbc.repository.support.SimpleJdbcRepository",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.jdbc.core.JdbcAggregateOperations",
            "org.springframework.data.mapping.PersistentEntity",
            "org.springframework.data.jdbc.core.convert.JdbcConverter"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.jpa.repository.JpaRepository"
    },
    {
      "type": "org.springframework.data.ldap.repository.LdapRepository"
    },
    {
      "type": "org.springframework.data.mapping.PersistentPropertyAccessor"
    },
    {
      "type": "org.springframework.data.mapping.context.AbstractMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mapping.context.MappingContext"
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoTemplate"
    },
    {
      "type": "org.springframework.data.querydsl.QuerydslPredicateExecutor"
    },
    {
      "type": "org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
    },
    {
      "type": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
    },
    {
      "type": "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.core.RedisOperations"
    },
    {
      "type": "org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
    },
    {
      "type": "org.springframework.data.relational.RelationalManagedTypes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.conversion.AbstractRelationalConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.conversion.MappingRelationalConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.conversion.RelationalConverter"
    },
    {
      "type": "org.springframework.data.relational.core.dialect.AbstractDialect",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.dialect.Dialect"
    },
    {
      "type": "org.springframework.data.relational.core.dialect.PostgresDialect",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.mapping.Column"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.MappedCollection"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.RelationalMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.mapping.Table"
    },
    {
      "type": "org.springframework.data.repository.CrudRepository"
    },
    {
      "type": "org.springframework.data.repository.NoRepositoryBean"
    },
    {
      "type": "org.springframework.data.repository.Repository"
    },
    {
      "type": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.repository.config.RepositoryConfiguration"
    },
    {
      "type": "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
    },
    {
      "type": "org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setConfigMap",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.repository.core.NamedQueries"
    },
    {
      "type": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setLazyInit",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setNamedQueries",
          "parameterTypes": [
            "org.springframework.data.repository.core.NamedQueries"
          ]
        },
        {
          "name": "setQueryLookupStrategyKey",
          "parameterTypes": [
            "org.springframework.data.repository.query.QueryLookupStrategy$Key"
          ]
        },
        {
          "name": "setRepositoryFragments",
          "parameterTypes": [
            "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFactoryInformation"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setTransactionManager",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.repository.query.QueryByExampleExecutor"
    },
    {
      "type": "org.springframework.data.repository.query.QueryLookupStrategy$Key"
    },
    {
      "type": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
    },
    {
      "type": "org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter"
    },
    {
      "type": "org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
    },
    {
      "type": "org.springframework.data.util.CustomCollections$EclipseCollections",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.util.CustomCollections$VavrCollections",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.util.CustomCollections.EclipseCollections"
    },
    {
      "type": "org.springframework.data.util.CustomCollections.VavrCollections"
    },
    {
      "type": "org.springframework.data.util.KotlinBeanInfoFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.util.Streamable"
    },
    {
      "type": "org.springframework.data.web.OffsetScrollPositionArgumentResolver"
    },
    {
      "type": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolverSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.PageableArgumentResolver"
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.SortArgumentResolver"
    },
    {
      "type": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.config.EnableSpringDataWebSupport"
    },
    {
      "type": "org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebSettingsRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer"
    },
    {
      "type": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "projectingArgumentResolverBeanPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer"
    },
    {
      "type": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonGeoModule",
          "parameterTypes": []
        },
        {
          "name": "pageModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.config.SpringDataJacksonModules"
    },
    {
      "type": "org.springframework.data.web.config.SpringDataWebConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectFactory"
          ]
        },
        {
          "name": "offsetResolver",
          "parameterTypes": []
        },
        {
          "name": "pageableResolver",
          "parameterTypes": []
        },
        {
          "name": "sortResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.SpringDataWebSettings",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.FormatterRegistry"
    },
    {
      "type": "org.springframework.format.support.DefaultFormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.support.FormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.EntityModel"
    },
    {
      "type": "org.springframework.hateoas.Link"
    },
    {
      "type": "org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.ReactiveHttpInputMessage"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.client.reactive.ClientHttpConnector"
    },
    {
      "type": "org.springframework.http.client.reactive.JdkClientHttpConnector",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.codec.ClientCodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.CodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.ServerCodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
    },
    {
      "type": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.http.codec.support.DefaultServerCodecConfigurer"
    },
    {
      "type": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.AbstractHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.GenericHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.StringHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.GsonHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.server.ServerHttpRequest"
    },
    {
      "type": "org.springframework.http.server.reactive.HttpHandler"
    },
    {
      "type": "org.springframework.integration.config.EnableIntegration"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcOperations"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.core.simple.DefaultJdbcClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.core.simple.JdbcClient"
    },
    {
      "type": "org.springframework.jdbc.datasource.DataSourceTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.datasource.DelegatingDataSource"
    },
    {
      "type": "org.springframework.jdbc.datasource.SimpleDriverDataSource",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
    },
    {
      "type": "org.springframework.jdbc.datasource.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.jdbc.support.JdbcAccessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.support.JdbcTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.support.JdbcUtils"
    },
    {
      "type": "org.springframework.jms.core.JmsTemplate"
    },
    {
      "type": "org.springframework.jmx.export.MBeanExporter"
    },
    {
      "type": "org.springframework.kafka.core.KafkaTemplate"
    },
    {
      "type": "org.springframework.lang.NonNullApi"
    },
    {
      "type": "org.springframework.lang.Nullable"
    },
    {
      "type": "org.springframework.ldap.core.ContextSource"
    },
    {
      "type": "org.springframework.mail.javamail.JavaMailSenderImpl"
    },
    {
      "type": "org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler"
    },
    {
      "type": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    },
    {
      "type": "org.springframework.oxm.Marshaller"
    },
    {
      "type": "org.springframework.r2dbc.connection.R2dbcTransactionManager"
    },
    {
      "type": "org.springframework.r2dbc.connection.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.retry.RetryOperations"
    },
    {
      "type": "org.springframework.retry.support.RetryTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.SchedulingTaskExecutor"
    },
    {
      "type": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
    },
    {
      "type": "org.springframework.security.access.expression.AbstractSecurityExpressionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.access.expression.SecurityExpressionHandler"
    },
    {
      "type": "org.springframework.security.authentication.AnonymousAuthenticationProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationEventPublisher"
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationManager"
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationManagerResolver"
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationProvider"
    },
    {
      "type": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.authentication.ProviderManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.authentication.ReactiveAuthenticationManager"
    },
    {
      "type": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent"
    },
    {
      "type": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent"
    },
    {
      "type": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent"
    },
    {
      "type": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent"
    },
    {
      "type": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent"
    },
    {
      "type": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent"
    },
    {
      "type": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent"
    },
    {
      "type": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent"
    },
    {
      "type": "org.springframework.security.authorization.AuthorizationManager"
    },
    {
      "type": "org.springframework.security.config.Customizer"
    },
    {
      "type": "org.springframework.security.config.ObjectPostProcessor"
    },
    {
      "type": "org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.AbstractSecurityBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.SecurityBuilder"
    },
    {
      "type": "org.springframework.security.config.annotation.SecurityConfigurer"
    },
    {
      "type": "org.springframework.security.config.annotation.authentication.ProviderManagerBuilder"
    },
    {
      "type": "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "authenticationManagerBuilder",
          "parameterTypes": [
            "org.springframework.security.config.ObjectPostProcessor",
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "enableGlobalAuthenticationAutowiredConfigurer",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "initializeAuthenticationProviderBeanManagerConfigurer",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "initializeUserDetailsBeanManagerConfigurer",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "setApplicationContext",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "setGlobalAuthenticationConfigurers",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setObjectPostProcessor",
          "parameterTypes": [
            "org.springframework.security.config.ObjectPostProcessor"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication"
    },
    {
      "type": "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "objectPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.HttpSecurityBuilder"
    },
    {
      "type": "org.springframework.security.config.annotation.web.builders.HttpSecurity",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.web.builders.WebSecurity",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "httpSecurity",
          "parameterTypes": []
        },
        {
          "name": "setApplicationContext",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "setAuthenticationConfiguration",
          "parameterTypes": [
            "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"
          ]
        },
        {
          "name": "setContentNegotiationStrategy",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationStrategy"
          ]
        },
        {
          "name": "setObjectPostProcessor",
          "parameterTypes": [
            "org.springframework.security.config.ObjectPostProcessor"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2AuthorizedClientManagerConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "authorizedClientManagerRegistrar",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2AuthorizedClientManagerRegistrar"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcSecurityConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2AuthorizedClientManagerRegistrar"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.ObservationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "authenticationManagerPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "filterChainDecoratorPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "webAuthorizationManagerPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.ObservationConfiguration$1",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.ObservationConfiguration$2",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.ObservationConfiguration$3",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.ObservationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "securityReactorContextSubscriberRegistrar",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.SecurityReactorContextConfiguration$SecurityReactorContextSubscriberRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.SpringWebMvcImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "requestDataValueProcessor",
          "parameterTypes": []
        },
        {
          "name": "springSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$1"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$HandlerMappingIntrospectorCacheFilterFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "conversionServicePostProcessor",
          "parameterTypes": []
        },
        {
          "name": "delegatingApplicationListener",
          "parameterTypes": []
        },
        {
          "name": "privilegeEvaluator",
          "parameterTypes": []
        },
        {
          "name": "setFilterChainProxySecurityConfigurer",
          "parameterTypes": [
            "org.springframework.security.config.ObjectPostProcessor",
            "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
          ]
        },
        {
          "name": "setFilterChains",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "springSecurityFilterChain",
          "parameterTypes": []
        },
        {
          "name": "webSecurityExpressionHandler",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configurers.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configurers.AuthorizeHttpRequestsConfigurer$AuthorizedUrl"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configurers.LogoutConfigurer"
    },
    {
      "type": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
    },
    {
      "type": "org.springframework.security.config.crypto.RsaKeyConversionServicePostProcessor"
    },
    {
      "type": "org.springframework.security.config.http.SessionCreationPolicy"
    },
    {
      "type": "org.springframework.security.context.DelegatingApplicationListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.core.GrantedAuthority"
    },
    {
      "type": "org.springframework.security.core.annotation.AuthenticationPrincipal"
    },
    {
      "type": "org.springframework.security.core.authority.SimpleGrantedAuthority"
    },
    {
      "type": "org.springframework.security.core.userdetails.UserDetails"
    },
    {
      "type": "org.springframework.security.core.userdetails.UserDetailsService"
    },
    {
      "type": "org.springframework.security.core.userdetails.UsernameNotFoundException"
    },
    {
      "type": "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.crypto.password.PasswordEncoder"
    },
    {
      "type": "org.springframework.security.data.repository.query.SecurityEvaluationContextExtension"
    },
    {
      "type": "org.springframework.security.oauth2.client.registration.ClientRegistration"
    },
    {
      "type": "org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"
    },
    {
      "type": "org.springframework.security.oauth2.jwt.JwtDecoder"
    },
    {
      "type": "org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.BearerTokenError"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.introspection.ReactiveOpaqueTokenIntrospector"
    },
    {
      "type": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
    },
    {
      "type": "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
    },
    {
      "type": "org.springframework.security.web.AuthenticationEntryPoint"
    },
    {
      "type": "org.springframework.security.web.DefaultSecurityFilterChain",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.FilterChainProxy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.SecurityFilterChain"
    },
    {
      "type": "org.springframework.security.web.access.AuthorizationManagerWebInvocationPrivilegeEvaluator$HttpServletRequestTransformer"
    },
    {
      "type": "org.springframework.security.web.access.ExceptionTranslationFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.access.HandlerMappingIntrospectorRequestTransformer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.web.servlet.handler.HandlerMappingIntrospector"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.access.WebInvocationPrivilegeEvaluator"
    },
    {
      "type": "org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.access.intercept.AuthorizationFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.authentication.logout.LogoutFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.authentication.logout.LogoutHandler"
    },
    {
      "type": "org.springframework.security.web.authentication.logout.LogoutSuccessEventPublishingLogoutHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.authentication.session.SessionAuthenticationStrategy"
    },
    {
      "type": "org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"
    },
    {
      "type": "org.springframework.security.web.context.SecurityContextHolderFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.csrf.CsrfFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.header.HeaderWriterFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.server.WebFilterChainProxy"
    },
    {
      "type": "org.springframework.security.web.server.csrf.CsrfToken"
    },
    {
      "type": "org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.servlet.util.matcher.MvcRequestMatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.util.matcher.RequestMatcher"
    },
    {
      "type": "org.springframework.security.web.util.matcher.RequestVariablesExtractor"
    },
    {
      "type": "org.springframework.session.Session"
    },
    {
      "type": "org.springframework.stereotype.Component"
    },
    {
      "type": "org.springframework.stereotype.Controller"
    },
    {
      "type": "org.springframework.stereotype.Indexed"
    },
    {
      "type": "org.springframework.stereotype.Repository"
    },
    {
      "type": "org.springframework.stereotype.Service"
    },
    {
      "type": "org.springframework.transaction.ConfigurableTransactionManager"
    },
    {
      "type": "org.springframework.transaction.PlatformTransactionManager"
    },
    {
      "type": "org.springframework.transaction.ReactiveTransactionManager"
    },
    {
      "type": "org.springframework.transaction.TransactionDefinition"
    },
    {
      "type": "org.springframework.transaction.TransactionManager"
    },
    {
      "type": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "transactionAttributeSource",
          "parameterTypes": []
        },
        {
          "name": "transactionalEventListenerFactory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.annotation.EnableTransactionManagement"
    },
    {
      "type": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "transactionAdvisor",
          "parameterTypes": [
            "org.springframework.transaction.interceptor.TransactionAttributeSource",
            "org.springframework.transaction.interceptor.TransactionInterceptor"
          ]
        },
        {
          "name": "transactionInterceptor",
          "parameterTypes": [
            "org.springframework.transaction.interceptor.TransactionAttributeSource"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.RestrictedTransactionalEventListenerFactory"
    },
    {
      "type": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.TransactionRuntimeHints"
    },
    {
      "type": "org.springframework.transaction.annotation.Transactional"
    },
    {
      "type": "org.springframework.transaction.aspectj.AbstractTransactionAspect"
    },
    {
      "type": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAspectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAttributeSource"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionalProxy"
    },
    {
      "type": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.support.DefaultTransactionDefinition",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.support.ResourceTransactionManager"
    },
    {
      "type": "org.springframework.transaction.support.TransactionOperations"
    },
    {
      "type": "org.springframework.transaction.support.TransactionTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ui.Model"
    },
    {
      "type": "org.springframework.util.AntPathMatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.Assert"
    },
    {
      "type": "org.springframework.util.CustomizableThreadCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.PathMatcher"
    },
    {
      "type": "org.springframework.validation.BindingResult"
    },
    {
      "type": "org.springframework.validation.SmartValidator"
    },
    {
      "type": "org.springframework.validation.Validator"
    },
    {
      "type": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.accept.ContentNegotiationManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.accept.ContentNegotiationStrategy"
    },
    {
      "type": "org.springframework.web.accept.MediaTypeFileExtensionResolver"
    },
    {
      "type": "org.springframework.web.bind.annotation.ExceptionHandler"
    },
    {
      "type": "org.springframework.web.bind.annotation.GetMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.Mapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.ModelAttribute"
    },
    {
      "type": "org.springframework.web.bind.annotation.PathVariable"
    },
    {
      "type": "org.springframework.web.bind.annotation.PostMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMapping"
    },
    {
      "type": "org.springframework.web.client.DefaultRestClientBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.client.ResponseErrorHandler"
    },
    {
      "type": "org.springframework.web.client.RestClient"
    },
    {
      "type": "org.springframework.web.client.RestClient$Builder"
    },
    {
      "type": "org.springframework.web.client.RestClientException"
    },
    {
      "type": "org.springframework.web.client.RestTemplate"
    },
    {
      "type": "org.springframework.web.context.ConfigurableWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.ConfigurableWebEnvironment"
    },
    {
      "type": "org.springframework.web.context.ServletContextAware"
    },
    {
      "type": "org.springframework.web.context.WebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.request.RequestContextListener"
    },
    {
      "type": "org.springframework.web.context.support.GenericWebApplicationContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.context.support.ServletContextResource"
    },
    {
      "type": "org.springframework.web.context.support.WebApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.cors.CorsConfigurationSource"
    },
    {
      "type": "org.springframework.web.cors.PreFlightRequestHandler"
    },
    {
      "type": "org.springframework.web.filter.CharacterEncodingFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.DelegatingFilterProxy"
    },
    {
      "type": "org.springframework.web.filter.FormContentFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.GenericFilterBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.OncePerRequestFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.RequestContextFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.method.support.CompositeUriComponentsContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.method.support.HandlerMethodArgumentResolver"
    },
    {
      "type": "org.springframework.web.method.support.UriComponentsContributor"
    },
    {
      "type": "org.springframework.web.multipart.MultipartResolver"
    },
    {
      "type": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.DispatcherHandler"
    },
    {
      "type": "org.springframework.web.reactive.HandlerResult"
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurer"
    },
    {
      "type": "org.springframework.web.reactive.function.client.DefaultWebClientBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.client.ExchangeFilterFunction"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient$Builder"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClientException"
    },
    {
      "type": "org.springframework.web.reactive.result.view.View"
    },
    {
      "type": "org.springframework.web.server.session.WebSessionManager"
    },
    {
      "type": "org.springframework.web.servlet.DispatcherServlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.FlashMapManager"
    },
    {
      "type": "org.springframework.web.servlet.FrameworkServlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.HandlerAdapter"
    },
    {
      "type": "org.springframework.web.servlet.HandlerExceptionResolver"
    },
    {
      "type": "org.springframework.web.servlet.HandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.HttpServletBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.LocaleResolver"
    },
    {
      "type": "org.springframework.web.servlet.RequestToViewNameTranslator"
    },
    {
      "type": "org.springframework.web.servlet.ThemeResolver"
    },
    {
      "type": "org.springframework.web.servlet.View"
    },
    {
      "type": "org.springframework.web.servlet.ViewResolver"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setConfigurers",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "beanNameHandlerMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "defaultServletHandlerMapping",
          "parameterTypes": []
        },
        {
          "name": "handlerExceptionResolver",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager"
          ]
        },
        {
          "name": "handlerFunctionAdapter",
          "parameterTypes": []
        },
        {
          "name": "httpRequestHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "mvcHandlerMappingIntrospector",
          "parameterTypes": []
        },
        {
          "name": "mvcPathMatcher",
          "parameterTypes": []
        },
        {
          "name": "mvcPatternParser",
          "parameterTypes": []
        },
        {
          "name": "mvcResourceUrlProvider",
          "parameterTypes": []
        },
        {
          "name": "mvcUriComponentsContributor",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
          ]
        },
        {
          "name": "mvcUrlPathHelper",
          "parameterTypes": []
        },
        {
          "name": "mvcViewResolver",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager"
          ]
        },
        {
          "name": "requestMappingHandlerAdapter",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.validation.Validator"
          ]
        },
        {
          "name": "requestMappingHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "resourceHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "routerFunctionMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "simpleControllerHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "viewControllerHandlerMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerMappingIntrospector",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.MatchableHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.i18n.AbstractLocaleResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.support.RedirectAttributes"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceUrlProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.AbstractFlashMapManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.RequestDataValueProcessor"
    },
    {
      "type": "org.springframework.web.servlet.support.SessionFlashMapManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.WebContentGenerator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.theme.AbstractThemeResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.theme.FixedThemeResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.BeanNameViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.InternalResourceViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.UrlBasedViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.ViewResolverComposite",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
    },
    {
      "type": "org.springframework.web.util.UrlPathHelper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.util.pattern.PathPatternParser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ws.transport.http.MessageDispatcherServlet"
    },
    {
      "type": "org.synchronoss.cloud.nio.multipart.NioMultipartParser"
    },
    {
      "type": "org.thymeleaf.ITemplateEngine"
    },
    {
      "type": "org.thymeleaf.TemplateEngine",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.context.IContext"
    },
    {
      "type": "org.thymeleaf.context.ITemplateContext"
    },
    {
      "type": "org.thymeleaf.dialect.AbstractDialect",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.dialect.AbstractDialectBeanInfo"
    },
    {
      "type": "org.thymeleaf.dialect.AbstractDialectCustomizer"
    },
    {
      "type": "org.thymeleaf.dialect.AbstractProcessorDialect",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.dialect.AbstractProcessorDialectBeanInfo"
    },
    {
      "type": "org.thymeleaf.dialect.AbstractProcessorDialectCustomizer"
    },
    {
      "type": "org.thymeleaf.dialect.IDialect",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.dialect.IExecutionAttributeDialect"
    },
    {
      "type": "org.thymeleaf.dialect.IExpressionObjectDialect"
    },
    {
      "type": "org.thymeleaf.dialect.IProcessorDialect",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.extras.springsecurity6.dialect.SpringSecurityDialect",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.model.IAttribute"
    },
    {
      "type": "org.thymeleaf.model.ICloseElementTag"
    },
    {
      "type": "org.thymeleaf.model.IModel"
    },
    {
      "type": "org.thymeleaf.model.IModelFactory"
    },
    {
      "type": "org.thymeleaf.model.IProcessableElementTag"
    },
    {
      "type": "org.thymeleaf.model.IStandaloneElementTag"
    },
    {
      "type": "org.thymeleaf.model.ITemplateEvent"
    },
    {
      "type": "org.thymeleaf.model.IText"
    },
    {
      "type": "org.thymeleaf.processor.element.IElementModelStructureHandler"
    },
    {
      "type": "org.thymeleaf.spring6.ISpringTemplateEngine"
    },
    {
      "type": "org.thymeleaf.spring6.SpringTemplateEngine",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.spring6.view.ThymeleafViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.templatemode.TemplateMode"
    },
    {
      "type": "org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.templateresolver.AbstractTemplateResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.templateresolver.ITemplateResolver"
    },
    {
      "type": "org.webjars.WebJarAssetLocator"
    },
    {
      "type": "org.webjars.WebJarVersionLocator"
    },
    {
      "type": "org.xmlbeam.XBProjector"
    },
    {
      "type": "org.xnio.SslClientAuthMode"
    },
    {
      "type": "org.yaml.snakeyaml.Yaml"
    },
    {
      "type": "org.zeroturnaround.javarebel.Integration"
    },
    {
      "type": "org.zeroturnaround.javarebel.ReloaderFactory"
    },
    {
      "type": "reactor.core.publisher.Flux"
    },
    {
      "type": "reactor.core.publisher.Hooks"
    },
    {
      "type": "reactor.core.publisher.Mono"
    },
    {
      "type": "reactor.core.publisher.MonoCacheTime",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.netty.http.client.HttpClient"
    },
    {
      "type": "reactor.netty.http.server.HttpServer"
    },
    {
      "type": "reactor.netty5.http.client.HttpClient"
    },
    {
      "type": "reactor.tools.agent.ReactorDebugAgent"
    },
    {
      "type": "reactor.util.context.ReactorContextAccessor"
    },
    {
      "type": "reactor.util.lang.NonNullApi"
    },
    {
      "type": "redis.clients.jedis.JedisPooled"
    },
    {
      "type": "scala.Option"
    },
    {
      "type": "software.amazon.awssdk.services.bedrockruntime.BedrockRuntimeAsyncClient"
    },
    {
      "type": "software.amazon.awssdk.services.bedrockruntime.BedrockRuntimeClient"
    },
    {
      "type": "sun.reflect.ReflectionFactory",
      "methods": [
        {
          "name": "getReflectionFactory",
          "parameterTypes": []
        },
        {
          "name": "newConstructorForSerialization",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.reflect.Constructor"
          ]
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.MD5",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.IssuerAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": {
        "proxy": [
          "ai.teamcollab.server.repository.CompanyRepository",
          "org.springframework.data.repository.Repository",
          "org.springframework.transaction.interceptor.TransactionalProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "ai.teamcollab.server.repository.ConversationRepository",
          "org.springframework.data.repository.Repository",
          "org.springframework.transaction.interceptor.TransactionalProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "ai.teamcollab.server.repository.RoleRepository",
          "org.springframework.data.repository.Repository",
          "org.springframework.transaction.interceptor.TransactionalProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "ai.teamcollab.server.repository.UserRepository",
          "org.springframework.data.repository.Repository",
          "org.springframework.transaction.interceptor.TransactionalProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.GenericArrayType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.ParameterizedType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.TypeVariable",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.WildcardType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.sql.Connection"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.beans.factory.annotation.Qualifier"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.context.properties.ConfigurationProperties"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.jdbc.core.convert.RelationResolver",
          "org.springframework.aop.SpringProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.relational.core.mapping.Table"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.jdbc.datasource.ConnectionProxy"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ModelAttribute"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.PathVariable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestMapping"
        ]
      }
    }
  ],
  "resources": [
    {
      "glob": "META-INF/MANIFEST.MF"
    },
    {
      "glob": "META-INF/build-info.properties"
    },
    {
      "glob": "META-INF/dgminfo"
    },
    {
      "glob": "META-INF/groovy/org.codehaus.groovy.runtime.ExtensionModule"
    },
    {
      "glob": "META-INF/jdbc-named-queries.properties"
    },
    {
      "glob": "META-INF/resources/index.html"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/io.micrometer.context.ContextAccessor"
    },
    {
      "glob": "META-INF/services/io.micrometer.context.ThreadLocalAccessor"
    },
    {
      "glob": "META-INF/services/jakarta.el.ExpressionFactory"
    },
    {
      "glob": "META-INF/services/jakarta.validation.ConstraintValidator"
    },
    {
      "glob": "META-INF/services/jakarta.validation.spi.ValidationProvider"
    },
    {
      "glob": "META-INF/services/jakarta.validation.valueextraction.ValueExtractor"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.net.spi.URLStreamHandlerProvider"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.sql.Driver"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/java.util.spi.ResourceBundleControlProvider"
    },
    {
      "glob": "META-INF/services/org.apache.juli.logging.Log"
    },
    {
      "glob": "META-INF/services/org.codehaus.groovy.runtime.ExtensionModule"
    },
    {
      "glob": "META-INF/services/org.flywaydb.core.extensibility.Plugin"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "META-INF/spring-autoconfigure-metadata.properties"
    },
    {
      "glob": "META-INF/spring-devtools.properties"
    },
    {
      "glob": "META-INF/spring.components"
    },
    {
      "glob": "META-INF/spring.factories"
    },
    {
      "glob": "META-INF/spring.integration.properties"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.replacements"
    },
    {
      "glob": "META-INF/validation.xml"
    },
    {
      "glob": "ai/teamcollab/server/"
    },
    {
      "glob": "application-default.properties"
    },
    {
      "glob": "application-default.xml"
    },
    {
      "glob": "application-default.yaml"
    },
    {
      "glob": "application-default.yml"
    },
    {
      "glob": "application.xml"
    },
    {
      "glob": "application.yaml"
    },
    {
      "glob": "application.yml"
    },
    {
      "glob": "banner.txt"
    },
    {
      "glob": "config/application-default.properties"
    },
    {
      "glob": "config/application-default.xml"
    },
    {
      "glob": "config/application-default.yaml"
    },
    {
      "glob": "config/application-default.yml"
    },
    {
      "glob": "config/application.properties"
    },
    {
      "glob": "config/application.xml"
    },
    {
      "glob": "config/application.yaml"
    },
    {
      "glob": "config/application.yml"
    },
    {
      "glob": "data-all.sql"
    },
    {
      "glob": "data.sql"
    },
    {
      "glob": "db/callback"
    },
    {
      "glob": "db/migration"
    },
    {
      "glob": "db/migration/V1__create_initial_schema.sql"
    },
    {
      "glob": "db/migration/V2__create_conversations_table.sql"
    },
    {
      "glob": "embedding/embedding-model-dimensions.properties"
    },
    {
      "glob": "git.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings_en.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings_en_US.properties"
    },
    {
      "glob": "jndi.properties"
    },
    {
      "glob": "logback-spring.groovy"
    },
    {
      "glob": "logback-spring.xml"
    },
    {
      "glob": "logback-test-spring.groovy"
    },
    {
      "glob": "logback-test-spring.xml"
    },
    {
      "glob": "logback-test.groovy"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback-test.xml"
    },
    {
      "glob": "logback.groovy"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "logback.xml"
    },
    {
      "glob": "messages.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/connector/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/core/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/core/RestrictedFilters.properties"
    },
    {
      "glob": "org/apache/catalina/core/RestrictedListeners.properties"
    },
    {
      "glob": "org/apache/catalina/core/RestrictedServlets.properties"
    },
    {
      "glob": "org/apache/catalina/deploy/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/loader/JdbcLeakPrevention.class"
    },
    {
      "glob": "org/apache/catalina/loader/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/mapper/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/mbeans/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/realm/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/security/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/session/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/startup/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/util/CharsetMapperDefault.properties"
    },
    {
      "glob": "org/apache/catalina/util/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/util/ServerInfo.properties"
    },
    {
      "glob": "org/apache/catalina/valves/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/webresources/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/http11/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/http11/filters/LocalStrings.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings_en.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings_en_US.properties"
    },
    {
      "glob": "org/apache/tomcat/util/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/buf/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/compat/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/descriptor/web/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/parser/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/modeler/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/net/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/scan/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/threads/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/server/LocalStrings.properties"
    },
    {
      "glob": "org/flywaydb/core/internal/version.txt"
    },
    {
      "glob": "org/postgresql/driverconfig.properties"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/anthropic/AnthropicAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/azure/openai/AzureOpenAiAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/bedrock/cohere/BedrockCohereEmbeddingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/bedrock/converse/BedrockConverseProxyChatAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/bedrock/titan/BedrockTitanEmbeddingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/client/ChatClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/memory/cassandra/CassandraChatMemoryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/model/ToolCallingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/observation/ChatObservationAutoConfiguration$FallbackChatContentObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/observation/ChatObservationAutoConfiguration$PrimaryChatContentObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/observation/ChatObservationAutoConfiguration$TracingChatContentObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/observation/ChatObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/embedding/observation/EmbeddingObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/huggingface/HuggingfaceChatAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/image/observation/ImageObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/minimax/MiniMaxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/mistralai/MistralAiAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/moonshot/MoonshotAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/oci/genai/OCIGenAiAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/ollama/OllamaAutoConfiguration$PropertiesOllamaConnectionDetails.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/ollama/OllamaAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/openai/OpenAiAutoConfiguration$ResolvedConnectionProperties.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/openai/OpenAiAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/postgresml/PostgresMlAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/qianfan/QianFanAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/retry/SpringAiRetryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/stabilityai/StabilityAiImageAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/transformers/TransformersEmbeddingModelAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/azure/AzureVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/cassandra/CassandraVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/chroma/ChromaVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/cosmosdb/CosmosDBVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/elasticsearch/ElasticsearchVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/gemfire/GemFireVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/hanadb/HanaCloudVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/mariadb/MariaDbStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/milvus/MilvusVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/mongo/MongoDBAtlasVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/neo4j/Neo4jVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/observation/VectorStoreObservationAutoConfiguration$FallbackVectorStoreQueryResponseContentObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/observation/VectorStoreObservationAutoConfiguration$PrimaryVectorStoreQueryResponseContentObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/observation/VectorStoreObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/opensearch/OpenSearchVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/oracle/OracleVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/pgvector/PgVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/pinecone/PineconeVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/qdrant/QdrantVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/redis/RedisVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/typesense/TypesenseVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/weaviate/WeaviateVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vertexai/embedding/VertexAiEmbeddingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/watsonxai/WatsonxAiAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/zhipuai/ZhiPuAiAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/aot/hint/annotation/Reflective.class"
    },
    {
      "glob": "org/springframework/beans/factory/Aware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanClassLoaderAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanFactoryAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/BeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation$ObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$class.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration/class.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AbstractDependsOnBeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureAfter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureBefore.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureOrder.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ImportAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ImportAutoConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$ClassProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/availability/ApplicationAvailabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/GenericCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/NoOpCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/SimpleCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnNotWarDeployment.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnProperty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnResource.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnSingleCandidate.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/LifecycleAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/AbstractRepositoryConfigurationSourceSupport.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/jdbc/JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/jdbc/JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/jdbc/JdbcRepositoriesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/jdbc/JdbcRepositoriesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/web/SpringDataWebAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$Extension.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayDataSourceCondition$DataSourceBeanCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayDataSourceCondition$FlywayUrlCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayDataSourceCondition$JdbcConnectionDetailsCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayDataSourceCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$LocationResolver.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$OracleFlywayConfigurationCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$PostgresqlFlywayConfigurationCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$PropertiesFlywayConnectionDetails.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$SqlServerFlywayConfigurationCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JsonbHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/HttpClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$DefaultCodecsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$JacksonCodecConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration$GitResourceAvailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonMixinConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$ParameterNamesModuleConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$EmbeddedDatabaseCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceAvailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceCondition$ExplicitType.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceCondition$PooledDataSourceAvailable.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceCheckpointRestoreConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Dbcp2.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Generic.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$OracleUcp.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Tomcat.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceJmxConfiguration$Hikari.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceJmxConfiguration$TomcatDataSourceJmxConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceJmxConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JndiDataSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/NamedParameterJdbcTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$CommonsDbcp2PoolDataSourceMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$OracleUcpPoolDataSourceMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$TomcatDataSourcePoolMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mail/MailSenderValidatorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/ReactorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/ConditionalOnDefaultWebSecurity.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/DefaultWebSecurityCondition$Beans.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/DefaultWebSecurityCondition$Classes.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/DefaultWebSecurityCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/SecurityDataConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/client/reactive/ReactiveOAuth2ClientAutoConfiguration$NonServletApplicationCondition$ServletApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/client/reactive/ReactiveOAuth2ClientAutoConfiguration$NonServletApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/client/reactive/ReactiveOAuth2ClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/client/servlet/OAuth2ClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/client/servlet/OAuth2ClientRegistrationRepositoryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/client/servlet/OAuth2WebSecurityConfiguration$OAuth2SecurityFilterChainConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/client/servlet/OAuth2WebSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveSecurityAutoConfiguration$SpringBootWebFluxSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveSecurityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured$MissingAlternative.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured$NameConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured$PasswordConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration$RSocketEnabledOrReactiveWebApplication$RSocketSecurityEnabledCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration$RSocketEnabledOrReactiveWebApplication$ReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration$RSocketEnabledOrReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/SecurityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/SecurityFilterAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/SpringBootWebSecurityConfiguration$SecurityFilterChainConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/SpringBootWebSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured$MissingAlternative.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured$NameConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured$PasswordConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/R2dbcInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition$ModeIsNever.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$TaskExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$TaskSchedulerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/TemplateEngineConfigurations$DefaultTemplateEngineConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/TemplateEngineConfigurations$ReactiveTemplateEngineConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$DataAttributeDialectConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafSecurityDialectConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafWebLayoutConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$AspectJTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration$JdkDynamicAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$TransactionTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionManagerCustomizationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/PrimaryDefaultValidatorPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$JettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveMultipartAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebSessionIdResolverAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/error/ErrorWebFluxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$HttpClient5.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$JdkClient.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$ReactorNetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration$WebClientCodecsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/MultipartAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$ForwardedHeaderFilterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$ForwardedHeaderFilterCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedJetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedTomcat.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedUndertow.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$OptionalPathExtensionContentNegotiationStrategy.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ProblemDetailsErrorHandlingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceHandlerRegistrationCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WelcomePageHandlerMappingFactory.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$ErrorPageCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$StaticView.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/reactive/WebSocketReactiveAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$JettyWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$UndertowWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration$DevToolsDataSourceCondition.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration$LiveReloadConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration$LiveReloadServerEventListener.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration$RestartConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/RemoteDevToolsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/devtools/env/devtools-property-defaults.properties"
    },
    {
      "glob": "org/springframework/boot/devtools/restart/ConditionalOnInitializedRestarter.class"
    },
    {
      "glob": "org/springframework/boot/sql/init/dependency/DatabaseInitializationDependencyConfigurer.class"
    },
    {
      "glob": "org/springframework/context/ApplicationContextAware.class"
    },
    {
      "glob": "org/springframework/context/ApplicationContextInitializer.class"
    },
    {
      "glob": "org/springframework/context/EnvironmentAware.class"
    },
    {
      "glob": "org/springframework/context/ResourceLoaderAware.class"
    },
    {
      "glob": "org/springframework/context/annotation/AdviceModeImportSelector.class"
    },
    {
      "glob": "org/springframework/context/annotation/AutoProxyRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/Conditional.class"
    },
    {
      "glob": "org/springframework/context/annotation/Configuration.class"
    },
    {
      "glob": "org/springframework/context/annotation/DeferredImportSelector.class"
    },
    {
      "glob": "org/springframework/context/annotation/Import.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportAware.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportBeanDefinitionRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportRuntimeHints.class"
    },
    {
      "glob": "org/springframework/context/annotation/Lazy.class"
    },
    {
      "glob": "org/springframework/context/annotation/Role.class"
    },
    {
      "glob": "org/springframework/core/Ordered.class"
    },
    {
      "glob": "org/springframework/core/annotation/Order.class"
    },
    {
      "glob": "org/springframework/data/jdbc/repository/config/AbstractJdbcConfiguration.class"
    },
    {
      "glob": "org/springframework/data/jdbc/repository/support/JdbcRepositoryFactoryBean.class"
    },
    {
      "glob": "org/springframework/data/repository/CrudRepository.class"
    },
    {
      "glob": "org/springframework/data/web/config/EnableSpringDataWebSupport$QuerydslActivator.class"
    },
    {
      "glob": "org/springframework/data/web/config/EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/data/web/config/EnableSpringDataWebSupport$SpringDataWebSettingsRegistrar.class"
    },
    {
      "glob": "org/springframework/data/web/config/EnableSpringDataWebSupport.class"
    },
    {
      "glob": "org/springframework/data/web/config/ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class"
    },
    {
      "glob": "org/springframework/data/web/config/SpringDataJacksonConfiguration.class"
    },
    {
      "glob": "org/springframework/data/web/config/SpringDataJacksonModules.class"
    },
    {
      "glob": "org/springframework/data/web/config/SpringDataWebConfiguration.class"
    },
    {
      "glob": "org/springframework/http/codec/CodecConfigurer.properties"
    },
    {
      "glob": "org/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration$AuthenticationManagerDelegator.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration$LazyPasswordEncoder.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/authentication/configuration/EnableGlobalAuthentication.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/configuration/ObjectPostProcessorConfiguration.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/EnableWebSecurity.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/HttpSecurityConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/HttpSecurityConfiguration$LazyPasswordEncoder.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/HttpSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/OAuth2ClientConfiguration$OAuth2AuthorizedClientManagerConfiguration.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/OAuth2ClientConfiguration$OAuth2ClientWebMvcImportSelector.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/OAuth2ClientConfiguration$OAuth2ClientWebMvcSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/OAuth2ClientConfiguration.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/OAuth2ClientConfiguration/OAuth2ClientWebMvcSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/OAuth2ImportSelector.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/ObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/ObservationImportSelector.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/SecurityReactorContextConfiguration$LoadingMap.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/SecurityReactorContextConfiguration$SecurityReactorContextSubscriber.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/SecurityReactorContextConfiguration$SecurityReactorContextSubscriberRegistrar.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/SecurityReactorContextConfiguration.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/SpringWebMvcImportSelector.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/WebMvcSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration$AnnotationAwareOrderComparator.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/security/core/userdetails/UserDetails.class"
    },
    {
      "glob": "org/springframework/security/core/userdetails/UserDetailsService.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/AbstractTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/EnableTransactionManagement.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/TransactionManagementConfigurationSelector.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/Mapping.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RequestMapping.class"
    },
    {
      "glob": "org/springframework/web/context/ServletContextAware.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport$NoOpValidator.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurer.class"
    },
    {
      "glob": "public/index.html"
    },
    {
      "glob": "resources/index.html"
    },
    {
      "glob": "schema-all.sql"
    },
    {
      "glob": "schema.sql"
    },
    {
      "glob": "spring.properties"
    },
    {
      "glob": "static/index.html"
    },
    {
      "glob": "templates/error.html"
    },
    {
      "glob": "templates/index.html"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt74b/nfc.nrm"
    }
  ],
  "bundles": [
    {
      "name": "jakarta.servlet.http.LocalStrings",
      "locales": [
        "en-US"
      ]
    },
    {
      "name": "org.apache.catalina.authenticator.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.connector.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.core.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.deploy.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.loader.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.mapper.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.mbeans.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.realm.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.security.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.session.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.startup.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.util.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.valves.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.catalina.webresources.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.coyote.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.coyote.http11.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.coyote.http11.filters.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.naming.LocalStrings",
      "locales": [
        "en-US"
      ]
    },
    {
      "name": "org.apache.tomcat.util.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.tomcat.util.buf.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.tomcat.util.compat.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.tomcat.util.descriptor.web.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.tomcat.util.http.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.tomcat.util.http.parser.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.tomcat.util.modeler.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.tomcat.util.net.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.tomcat.util.scan.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.tomcat.util.threads.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.tomcat.websocket.LocalStrings",
      "locales": [
        "und"
      ]
    },
    {
      "name": "org.apache.tomcat.websocket.server.LocalStrings",
      "locales": [
        "und"
      ]
    }
  ],
  "jni": [
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "sun.management.VMManagementImpl",
      "fields": [
        {
          "name": "compTimeMonitoringSupport"
        },
        {
          "name": "currentThreadCpuTimeSupport"
        },
        {
          "name": "objectMonitorUsageSupport"
        },
        {
          "name": "otherThreadCpuTimeSupport"
        },
        {
          "name": "remoteDiagnosticCommandsSupport"
        },
        {
          "name": "synchronizerUsageSupport"
        },
        {
          "name": "threadAllocatedMemorySupport"
        },
        {
          "name": "threadContentionMonitoringSupport"
        }
      ]
    }
  ]
}