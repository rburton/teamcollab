<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>ai.teamcollab</groupId>
    <artifactId>server</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>TeamCollab</name>
    <description>TeamCollab</description>
    <properties>
        <java.version>23</java.version>
        <spring-ai.version>1.0.0-M6</spring-ai.version>
        <spring-boot.build-image.builder>paketobuildpacks/builder:tiny</spring-boot.build-image.builder>
        <native.build.args>--initialize-at-build-time=java.beans.Introspector$1,java.beans,java.beans.Introspector</native.build.args>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.ai</groupId>
            <artifactId>spring-ai-ollama-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.ai</groupId>
            <artifactId>spring-ai-openai-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity6</artifactId>
        </dependency>
        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.ai</groupId>
            <artifactId>spring-ai-spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.ai</groupId>
            <artifactId>spring-ai-spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>ollama</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>sockjs-client</artifactId>
            <version>1.5.1</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>stomp-websocket</artifactId>
            <version>2.3.4</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-jdbc</artifactId>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-bom</artifactId>
                <version>${spring-ai.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <classifier>exec</classifier>
                            <jvmArguments>
                                -agentlib:native-image-agent=config-output-dir=src/main/resources/META-INF/native-image
                            </jvmArguments>
                        </configuration>
                        <executions>
                            <execution>
                                <id>process-aot</id>
                                <goals>
                                    <goal>process-aot</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <configuration>
                            <buildArgs>
                                <buildArg>--initialize-at-build-time=io.micrometer</buildArg>
                                <buildArg>--initialize-at-build-time=reactor</buildArg>
                                <buildArg>--initialize-at-build-time=java.io</buildArg>
                                <buildArg>--initialize-at-build-time=groovyjarjarasm</buildArg>
                                <buildArg>--initialize-at-build-time=com.google</buildArg>
                                <buildArg>--initialize-at-build-time=com.fasterxml</buildArg>
                                <buildArg>--initialize-at-build-time=io.micrometer.common.ImmutableKeyValue</buildArg>
                                <buildArg>--initialize-at-build-time=reactor.core.publisher.MonoErrorSupplied</buildArg>
                                <buildArg>--initialize-at-build-time=com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer</buildArg>
                                <buildArg>--initialize-at-build-time=com.fasterxml.jackson.datatype.jsr310.ser.JavaTimeSerializerModifier</buildArg>
                                <buildArg>--initialize-at-build-time=com.fasterxml.jackson.datatype.jsr310.JavaTimeModule</buildArg>
                                <buildArg>--initialize-at-build-time=com.fasterxml.jackson.datatype.jdk8.Jdk8TypeModifier</buildArg>
                                <buildArg>--initialize-at-build-time=java.sql.JDBCType</buildArg>
                                <buildArg>--initialize-at-build-time=io.micrometer.common.util.internal.logging.LocationAwareSlf4JLogger</buildArg>
                                <buildArg>--initialize-at-build-time=com.fasterxml.jackson.datatype.jsr310.JavaTimeModule$1</buildArg>
                                <buildArg>--initialize-at-build-time=io.micrometer.observation.NoopObservationConfig</buildArg>
                                <buildArg>--initialize-at-build-time=io.micrometer.observation</buildArg>
                                <buildArg>--initialize-at-build-time=io.micrometer.observation.SimpleObservationRegistry</buildArg>
                                <buildArg>--initialize-at-build-time=io.micrometer.observation.NoopObservationRegistry</buildArg>
                                <buildArg>--initialize-at-build-time=com.fasterxml.jackson.module.paramnames.ParameterNamesAnnotationIntrospector</buildArg>
                                <buildArg>--initialize-at-build-time=org.springframework.ai.chat.observation.DefaultChatModelObservationConvention</buildArg>
                                <buildArg>--initialize-at-build-time=org.springframework</buildArg>
                                <buildArg>--initialize-at-build-time=com.fasterxml.jackson.annotation</buildArg>
                                <buildArg>--initialize-at-build-time=reactor.core.publisher.FluxEmpty</buildArg>
                                <buildArg>--initialize-at-build-time=groovyjarjarasm.asm.Type</buildArg>
                                <buildArg>--initialize-at-build-time=com.sun.beans.finder.BeanInfoFinder</buildArg>
                                <buildArg>--initialize-at-build-time=reactor.adapter.JdkFlowAdapter$PublisherAsFlowPublisher</buildArg>
                                <buildArg>--initialize-at-build-time=java.beans.Introspector$1,java.beans,java.beans.Introspector</buildArg>
                                <buildArg>--initialize-at-build-time=org.slf4j,ch.qos.logback,org.apache.logging,org.apache.commons.logging</buildArg>
                                <buildArg>--initialize-at-run-time=io.netty.channel.DefaultFileRegion</buildArg>
                                <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                                <buildArg>-H:+PrintClassInitialization</buildArg>
                                <buildArg>--no-fallback</buildArg>
                                <buildArg>-H:+AllowIncompleteClasspath</buildArg>
                                <buildArg>-H:ReflectionConfigurationFiles=${project.basedir}/src/main/resources/META-INF/native-image/reflect-config.json</buildArg>
                                <buildArg>-H:ResourceConfigurationFiles=${project.basedir}/src/main/resources/META-INF/native-image/resource-config.json</buildArg>
                            </buildArgs>
                            <metadataRepository>
                                <enabled>true</enabled>
                            </metadataRepository>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-native</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>${project.parent.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
